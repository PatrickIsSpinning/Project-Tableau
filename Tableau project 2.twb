<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20251.25.0313.2002                               -->
<workbook original-version='18.1' source-build='2025.1.0 (20251.25.0313.2002)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Orders+ (Sample - Superstore)' inline='true' name='federated.1vrhlw30lqg3h11cnvldo19i9w8e' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sample - Superstore' name='excel-direct.0h3j5mp1qa1t5815x8nay0ywirka'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='E:/Business Data analytics/BUSINESS DATA ANALYTICS B-1 All materials &amp; Recording/Day-2_Tableau/2_Day-2_BDA/Tutorial-2_Tableau/Sample - Superstore.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation type='collection'>
          <relation connection='excel-direct.0h3j5mp1qa1t5815x8nay0ywirka' name='Orders' table='[Orders$]' type='table'>
            <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
              <column datatype='integer' name='Row ID' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='date' name='Order Date' ordinal='2' />
              <column datatype='date' name='Ship Date' ordinal='3' />
              <column datatype='string' name='Ship Mode' ordinal='4' />
              <column datatype='string' name='Customer ID' ordinal='5' />
              <column datatype='string' name='Customer Name' ordinal='6' />
              <column datatype='string' name='Segment' ordinal='7' />
              <column datatype='string' name='Country/Region' ordinal='8' />
              <column datatype='string' name='City' ordinal='9' />
              <column datatype='string' name='State' ordinal='10' />
              <column datatype='integer' name='Postal Code' ordinal='11' />
              <column datatype='string' name='Region' ordinal='12' />
              <column datatype='string' name='Product ID' ordinal='13' />
              <column datatype='string' name='Category' ordinal='14' />
              <column datatype='string' name='Sub-Category' ordinal='15' />
              <column datatype='string' name='Product Name' ordinal='16' />
              <column datatype='real' name='Sales' ordinal='17' />
              <column datatype='integer' name='Quantity' ordinal='18' />
              <column datatype='real' name='Discount' ordinal='19' />
              <column datatype='real' name='Profit' ordinal='20' />
            </columns>
          </relation>
          <relation connection='excel-direct.0h3j5mp1qa1t5815x8nay0ywirka' name='People' table='[People$]' type='table'>
            <columns gridOrigin='A1:B5:no:A1:B5:0' header='yes' outcome='6'>
              <column datatype='string' name='Person' ordinal='0' />
              <column datatype='string' name='Region' ordinal='1' />
            </columns>
          </relation>
          <relation connection='excel-direct.0h3j5mp1qa1t5815x8nay0ywirka' name='Returns' table='[Returns$]' type='table'>
            <columns gridOrigin='A1:B801:no:A1:B801:0' header='yes' outcome='6'>
              <column datatype='string' name='Returned' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Category]' value='[Orders].[Category]' />
          <map key='[City]' value='[Orders].[City]' />
          <map key='[Country/Region]' value='[Orders].[Country/Region]' />
          <map key='[Customer ID]' value='[Orders].[Customer ID]' />
          <map key='[Customer Name]' value='[Orders].[Customer Name]' />
          <map key='[Discount]' value='[Orders].[Discount]' />
          <map key='[Order Date]' value='[Orders].[Order Date]' />
          <map key='[Order ID (Returns)]' value='[Returns].[Order ID]' />
          <map key='[Order ID]' value='[Orders].[Order ID]' />
          <map key='[Person]' value='[People].[Person]' />
          <map key='[Postal Code]' value='[Orders].[Postal Code]' />
          <map key='[Product ID]' value='[Orders].[Product ID]' />
          <map key='[Product Name]' value='[Orders].[Product Name]' />
          <map key='[Profit]' value='[Orders].[Profit]' />
          <map key='[Quantity]' value='[Orders].[Quantity]' />
          <map key='[Region (People)]' value='[People].[Region]' />
          <map key='[Region]' value='[Orders].[Region]' />
          <map key='[Returned]' value='[Returns].[Returned]' />
          <map key='[Row ID]' value='[Orders].[Row ID]' />
          <map key='[Sales]' value='[Orders].[Sales]' />
          <map key='[Segment]' value='[Orders].[Segment]' />
          <map key='[Ship Date]' value='[Orders].[Ship Date]' />
          <map key='[Ship Mode]' value='[Orders].[Ship Mode]' />
          <map key='[State]' value='[Orders].[State]' />
          <map key='[Sub-Category]' value='[Orders].[Sub-Category]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U9995:no:A1:U9995:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[People]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B5:no:A1:B5:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Returns]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B801:no:A1:B801:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Orders_4CE36816370846B887F12C6A5A2DC5B3]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_4CE36816370846B887F12C6A5A2DC5B3]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <object-id>[Orders_4CE36816370846B887F12C6A5A2DC5B3]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <object-id>[Orders_4CE36816370846B887F12C6A5A2DC5B3]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_4CE36816370846B887F12C6A5A2DC5B3]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_4CE36816370846B887F12C6A5A2DC5B3]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_4CE36816370846B887F12C6A5A2DC5B3]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_4CE36816370846B887F12C6A5A2DC5B3]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country/Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country/Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country/Region</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_4CE36816370846B887F12C6A5A2DC5B3]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_4CE36816370846B887F12C6A5A2DC5B3]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_4CE36816370846B887F12C6A5A2DC5B3]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Orders_4CE36816370846B887F12C6A5A2DC5B3]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_4CE36816370846B887F12C6A5A2DC5B3]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_4CE36816370846B887F12C6A5A2DC5B3]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_4CE36816370846B887F12C6A5A2DC5B3]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_4CE36816370846B887F12C6A5A2DC5B3]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_4CE36816370846B887F12C6A5A2DC5B3]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Orders_4CE36816370846B887F12C6A5A2DC5B3]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Orders_4CE36816370846B887F12C6A5A2DC5B3]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Orders_4CE36816370846B887F12C6A5A2DC5B3]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Orders_4CE36816370846B887F12C6A5A2DC5B3]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Person</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Person]</local-name>
            <parent-name>[People]</parent-name>
            <remote-alias>Person</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[People_E64E2A6E85314A7D887A806E2A61B2BB]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region (People)]</local-name>
            <parent-name>[People]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[People_E64E2A6E85314A7D887A806E2A61B2BB]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Returned</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Returned]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Returned</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Returns_29973D4BB58D47D68984E71F8E7794C6]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID (Returns)]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Returns_29973D4BB58D47D68984E71F8E7794C6]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_4CE36816370846B887F12C6A5A2DC5B3]' role='measure' type='quantitative' />
      <column caption='People' datatype='table' name='[__tableau_internal_object_id__].[People_E64E2A6E85314A7D887A806E2A61B2BB]' role='measure' type='quantitative' />
      <column caption='Returns' datatype='table' name='[__tableau_internal_object_id__].[Returns_29973D4BB58D47D68984E71F8E7794C6]' role='measure' type='quantitative' />
      <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      <group caption='Action (Country/Region,State)' hidden='true' name='[Action (Country/Region,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country/Region]' />
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (Country/Region,State)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Country/Region:nk]' />
          <groupfilter function='level-members' level='[none:State:nk]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Bangladesh&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Orders' id='Orders_4CE36816370846B887F12C6A5A2DC5B3'>
            <properties context=''>
              <relation connection='excel-direct.0h3j5mp1qa1t5815x8nay0ywirka' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='string' name='Country/Region' ordinal='8' />
                  <column datatype='string' name='City' ordinal='9' />
                  <column datatype='string' name='State' ordinal='10' />
                  <column datatype='integer' name='Postal Code' ordinal='11' />
                  <column datatype='string' name='Region' ordinal='12' />
                  <column datatype='string' name='Product ID' ordinal='13' />
                  <column datatype='string' name='Category' ordinal='14' />
                  <column datatype='string' name='Sub-Category' ordinal='15' />
                  <column datatype='string' name='Product Name' ordinal='16' />
                  <column datatype='real' name='Sales' ordinal='17' />
                  <column datatype='integer' name='Quantity' ordinal='18' />
                  <column datatype='real' name='Discount' ordinal='19' />
                  <column datatype='real' name='Profit' ordinal='20' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='People' id='People_E64E2A6E85314A7D887A806E2A61B2BB'>
            <properties context=''>
              <relation connection='excel-direct.0h3j5mp1qa1t5815x8nay0ywirka' name='People' table='[People$]' type='table'>
                <columns gridOrigin='A1:B5:no:A1:B5:0' header='yes' outcome='6'>
                  <column datatype='string' name='Person' ordinal='0' />
                  <column datatype='string' name='Region' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Returns' id='Returns_29973D4BB58D47D68984E71F8E7794C6'>
            <properties context=''>
              <relation connection='excel-direct.0h3j5mp1qa1t5815x8nay0ywirka' name='Returns' table='[Returns$]' type='table'>
                <columns gridOrigin='A1:B801:no:A1:B801:0' header='yes' outcome='6'>
                  <column datatype='string' name='Returned' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Region]' />
              <expression op='[Region (People)]' />
            </expression>
            <first-end-point object-id='Orders_4CE36816370846B887F12C6A5A2DC5B3' />
            <second-end-point object-id='People_E64E2A6E85314A7D887A806E2A61B2BB' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Order ID]' />
              <expression op='[Order ID (Returns)]' />
            </expression>
            <first-end-point object-id='Orders_4CE36816370846B887F12C6A5A2DC5B3' />
            <second-end-point object-id='Returns_29973D4BB58D47D68984E71F8E7794C6' />
          </relationship>
        </relationships>
      </object-graph>
    </datasource>
    <datasource caption='Sample - Superstore' inline='true' name='federated.117p7hx1yeosxl1etr3mj05srf9g' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sample - Superstore' name='excel-direct.0ufyez51y24gq81446q9q12mu71l'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='E:/Business Data analytics/BUSINESS DATA ANALYTICS B-1 All materials &amp; Recording/Day-2_Tableau/2_Day-2_BDA/Tutorial-2_Tableau/Sample - Superstore.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation all='true' name='Union' type='union'>
          <columns header='yes'>
            <column datatype='integer' name='Row ID' />
            <column datatype='string' name='Order ID' />
            <column datatype='date' name='Order Date' />
            <column datatype='date' name='Ship Date' />
            <column datatype='string' name='Ship Mode' />
            <column datatype='string' name='Customer ID' />
            <column datatype='string' name='Customer Name' />
            <column datatype='string' name='Segment' />
            <column datatype='string' name='Country/Region' />
            <column datatype='string' name='City' />
            <column datatype='string' name='State' />
            <column datatype='integer' name='Postal Code' />
            <column datatype='string' name='Region' />
            <column datatype='string' name='Product ID' />
            <column datatype='string' name='Category' />
            <column datatype='string' name='Sub-Category' />
            <column datatype='string' name='Product Name' />
            <column datatype='real' name='Sales' />
            <column datatype='integer' name='Quantity' />
            <column datatype='real' name='Discount' />
            <column datatype='real' name='Profit' />
            <column datatype='string' name='Person' />
            <column datatype='string' name='Returned' />
            <column datatype='string' name='Sheet' />
            <column datatype='string' name='Table Name' />
          </columns>
          <relation connection='excel-direct.0ufyez51y24gq81446q9q12mu71l' name='Orders' table='[Orders$]' type='table'>
            <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
              <column datatype='integer' name='Row ID' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='date' name='Order Date' ordinal='2' />
              <column datatype='date' name='Ship Date' ordinal='3' />
              <column datatype='string' name='Ship Mode' ordinal='4' />
              <column datatype='string' name='Customer ID' ordinal='5' />
              <column datatype='string' name='Customer Name' ordinal='6' />
              <column datatype='string' name='Segment' ordinal='7' />
              <column datatype='string' name='Country/Region' ordinal='8' />
              <column datatype='string' name='City' ordinal='9' />
              <column datatype='string' name='State' ordinal='10' />
              <column datatype='integer' name='Postal Code' ordinal='11' />
              <column datatype='string' name='Region' ordinal='12' />
              <column datatype='string' name='Product ID' ordinal='13' />
              <column datatype='string' name='Category' ordinal='14' />
              <column datatype='string' name='Sub-Category' ordinal='15' />
              <column datatype='string' name='Product Name' ordinal='16' />
              <column datatype='real' name='Sales' ordinal='17' />
              <column datatype='integer' name='Quantity' ordinal='18' />
              <column datatype='real' name='Discount' ordinal='19' />
              <column datatype='real' name='Profit' ordinal='20' />
            </columns>
          </relation>
          <relation connection='excel-direct.0ufyez51y24gq81446q9q12mu71l' name='People' table='[People$]' type='table'>
            <columns gridOrigin='A1:B5:no:A1:B5:0' header='yes' outcome='6'>
              <column datatype='string' name='Person' ordinal='0' />
              <column datatype='string' name='Region' ordinal='1' />
            </columns>
          </relation>
          <relation connection='excel-direct.0ufyez51y24gq81446q9q12mu71l' name='Returns' table='[Returns$]' type='table'>
            <columns gridOrigin='A1:B801:no:A1:B801:0' header='yes' outcome='6'>
              <column datatype='string' name='Returned' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
            </columns>
          </relation>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Union]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[_DD2780C6166E42DB8A87B1CFF49D206C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <object-id>[_DD2780C6166E42DB8A87B1CFF49D206C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[_DD2780C6166E42DB8A87B1CFF49D206C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[_DD2780C6166E42DB8A87B1CFF49D206C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <object-id>[_DD2780C6166E42DB8A87B1CFF49D206C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <object-id>[_DD2780C6166E42DB8A87B1CFF49D206C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <object-id>[_DD2780C6166E42DB8A87B1CFF49D206C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <object-id>[_DD2780C6166E42DB8A87B1CFF49D206C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country/Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country/Region]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Country/Region</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <object-id>[_DD2780C6166E42DB8A87B1CFF49D206C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <object-id>[_DD2780C6166E42DB8A87B1CFF49D206C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <object-id>[_DD2780C6166E42DB8A87B1CFF49D206C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[_DD2780C6166E42DB8A87B1CFF49D206C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <object-id>[_DD2780C6166E42DB8A87B1CFF49D206C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <object-id>[_DD2780C6166E42DB8A87B1CFF49D206C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <object-id>[_DD2780C6166E42DB8A87B1CFF49D206C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <object-id>[_DD2780C6166E42DB8A87B1CFF49D206C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <object-id>[_DD2780C6166E42DB8A87B1CFF49D206C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[_DD2780C6166E42DB8A87B1CFF49D206C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[_DD2780C6166E42DB8A87B1CFF49D206C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[_DD2780C6166E42DB8A87B1CFF49D206C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[_DD2780C6166E42DB8A87B1CFF49D206C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Person</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Person]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Person</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <object-id>[_DD2780C6166E42DB8A87B1CFF49D206C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Returned</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Returned]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Returned</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <object-id>[_DD2780C6166E42DB8A87B1CFF49D206C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sheet</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sheet]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Sheet</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <object-id>[_DD2780C6166E42DB8A87B1CFF49D206C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Table Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Table Name]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Table Name</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <object-id>[_DD2780C6166E42DB8A87B1CFF49D206C]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Union' datatype='table' name='[__tableau_internal_object_id__].[_DD2780C6166E42DB8A87B1CFF49D206C]' role='measure' type='quantitative' />
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Bangladesh&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Union' id='_DD2780C6166E42DB8A87B1CFF49D206C'>
            <properties context=''>
              <relation all='true' name='Union' type='union'>
                <columns header='yes'>
                  <column datatype='integer' name='Row ID' />
                  <column datatype='string' name='Order ID' />
                  <column datatype='date' name='Order Date' />
                  <column datatype='date' name='Ship Date' />
                  <column datatype='string' name='Ship Mode' />
                  <column datatype='string' name='Customer ID' />
                  <column datatype='string' name='Customer Name' />
                  <column datatype='string' name='Segment' />
                  <column datatype='string' name='Country/Region' />
                  <column datatype='string' name='City' />
                  <column datatype='string' name='State' />
                  <column datatype='integer' name='Postal Code' />
                  <column datatype='string' name='Region' />
                  <column datatype='string' name='Product ID' />
                  <column datatype='string' name='Category' />
                  <column datatype='string' name='Sub-Category' />
                  <column datatype='string' name='Product Name' />
                  <column datatype='real' name='Sales' />
                  <column datatype='integer' name='Quantity' />
                  <column datatype='real' name='Discount' />
                  <column datatype='real' name='Profit' />
                  <column datatype='string' name='Person' />
                  <column datatype='string' name='Returned' />
                  <column datatype='string' name='Sheet' />
                  <column datatype='string' name='Table Name' />
                </columns>
                <relation connection='excel-direct.0ufyez51y24gq81446q9q12mu71l' name='Orders' table='[Orders$]' type='table'>
                  <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
                    <column datatype='integer' name='Row ID' ordinal='0' />
                    <column datatype='string' name='Order ID' ordinal='1' />
                    <column datatype='date' name='Order Date' ordinal='2' />
                    <column datatype='date' name='Ship Date' ordinal='3' />
                    <column datatype='string' name='Ship Mode' ordinal='4' />
                    <column datatype='string' name='Customer ID' ordinal='5' />
                    <column datatype='string' name='Customer Name' ordinal='6' />
                    <column datatype='string' name='Segment' ordinal='7' />
                    <column datatype='string' name='Country/Region' ordinal='8' />
                    <column datatype='string' name='City' ordinal='9' />
                    <column datatype='string' name='State' ordinal='10' />
                    <column datatype='integer' name='Postal Code' ordinal='11' />
                    <column datatype='string' name='Region' ordinal='12' />
                    <column datatype='string' name='Product ID' ordinal='13' />
                    <column datatype='string' name='Category' ordinal='14' />
                    <column datatype='string' name='Sub-Category' ordinal='15' />
                    <column datatype='string' name='Product Name' ordinal='16' />
                    <column datatype='real' name='Sales' ordinal='17' />
                    <column datatype='integer' name='Quantity' ordinal='18' />
                    <column datatype='real' name='Discount' ordinal='19' />
                    <column datatype='real' name='Profit' ordinal='20' />
                  </columns>
                </relation>
                <relation connection='excel-direct.0ufyez51y24gq81446q9q12mu71l' name='People' table='[People$]' type='table'>
                  <columns gridOrigin='A1:B5:no:A1:B5:0' header='yes' outcome='6'>
                    <column datatype='string' name='Person' ordinal='0' />
                    <column datatype='string' name='Region' ordinal='1' />
                  </columns>
                </relation>
                <relation connection='excel-direct.0ufyez51y24gq81446q9q12mu71l' name='Returns' table='[Returns$]' type='table'>
                  <columns gridOrigin='A1:B801:no:A1:B801:0' header='yes' outcome='6'>
                    <column datatype='string' name='Returned' ordinal='0' />
                    <column datatype='string' name='Order ID' ordinal='1' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_0BDFB529D4DB43FBAE3092CC7B4D8BA8]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Regional Sales and Profit' type='sheet' worksheet='Profit map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Regional Sales and Profit' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Negative Profit Bar Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore)' name='federated.1vrhlw30lqg3h11cnvldo19i9w8e' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1vrhlw30lqg3h11cnvldo19i9w8e'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Postal Code]' derivation='None' name='[none:Postal Code:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[Inclusions (Country/Region,State)]' context='true'>
            <groupfilter function='crossjoin' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;United States&quot;' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Florida&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;North Carolina&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='&quot;Tennessee&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[none:City:nk]'>
            <groupfilter count='5' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Profit])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Apopka&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Asheville&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Bartlett&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Boca Raton&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Boynton Beach&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Bristol&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Burlington&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Cary&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Chapel Hill&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Charlotte&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Chattanooga&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Clarksville&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Columbia&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Concord&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Coral Gables&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Coral Springs&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Daytona Beach&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Delray Beach&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Deltona&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Durham&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Fayetteville&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Fort Lauderdale&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Franklin&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Gastonia&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Goldsboro&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Greensboro&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Greenville&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Hendersonville&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Hialeah&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Hickory&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Hollywood&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Homestead&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Jackson&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Jacksonville&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Johnson City&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Jupiter&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Kissimmee&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Knoxville&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Lakeland&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Lebanon&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Margate&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Melbourne&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Memphis&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Miami&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Miramar&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Monroe&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Murfreesboro&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Nashville&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;North Miami&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Orlando&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Ormond Beach&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Palm Coast&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Pembroke Pines&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Pensacola&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Plantation&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Pompano Beach&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Port Orange&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Port Saint Lucie&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Raleigh&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Saint Petersburg&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Sanford&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Smyrna&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Tallahassee&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Tamarac&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Tampa&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Thomasville&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;West Palm Beach&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Wilmington&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Wilson&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[none:Postal Code:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Postal Code:ok]' member='%null%' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='1040' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='1453' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='1752' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='1810' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='1841' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='1852' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='1915' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='2038' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='2138' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='2148' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='2149' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='2151' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='2169' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='2740' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='2886' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='2895' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='2908' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='2920' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='3060' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='3301' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='3820' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='4240' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='4401' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='6010' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='6040' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='6360' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='6450' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='6457' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='6460' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='6484' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='6708' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='6810' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='6824' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='7002' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='7011' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='7017' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='7036' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='7050' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='7055' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='7060' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='7090' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='7109' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='7501' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='7601' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='7960' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='8302' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='8360' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='8401' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='8701' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='8861' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='8901' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='10009' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='10011' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='10024' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='10035' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='10550' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='10701' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='10801' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='11520' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='11550' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='11561' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='11572' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='11757' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='12180' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='13021' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='13440' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='13501' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='13601' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='14215' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='14304' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='14609' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='14701' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='16602' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='17403' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='17602' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='18018' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='18103' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='19013' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='19120' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='19134' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='19140' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='19143' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='19601' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='19711' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='19805' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='19901' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='20016' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='20707' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='20735' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='20852' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='20877' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='21044' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='21215' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='21740' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='22153' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='22204' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='22304' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='22801' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='22901' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='22980' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='23223' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='23320' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='23434' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='23464' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='23602' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='23666' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='24153' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='26003' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='27217' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='27360' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='27405' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='27511' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='27514' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='27534' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='27604' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='27707' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='27834' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='27893' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='28027' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='28052' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='28110' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='28205' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='28314' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='28403' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='28601' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='28806' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='29203' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='29406' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='29464' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='29483' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='29501' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='29730' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='30062' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='30076' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='30080' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='30188' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='30318' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='30328' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='30344' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='30605' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='31088' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='31204' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='31907' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='32114' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='32127' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='32137' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='32174' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='32216' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='32303' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='32503' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='32712' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='32725' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='32771' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='32839' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='32935' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='33012' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='33021' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='33023' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='33024' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='33030' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='33063' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='33065' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='33068' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='33134' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='33142' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='33161' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='33178' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='33180' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='33311' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='33317' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='33319' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='33407' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='33433' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='33437' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='33445' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='33458' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='33614' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='33710' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='33801' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='34741' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='34952' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='35244' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='35401' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='35601' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='35630' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='35810' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='36116' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='36608' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='36830' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='37042' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='37064' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='37075' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='37087' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='37130' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='37167' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='37211' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='37421' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='37604' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='37620' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='37918' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='38109' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='38134' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='38301' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='38401' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='38671' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='39212' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='39401' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='39503' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='40214' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='40324' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='40475' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='41042' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='42071' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='42104' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='42301' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='42420' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='43017' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='43055' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='43123' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='43130' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='43229' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='43302' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='43402' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='43615' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='44035' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='44052' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='44060' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='44105' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='44107' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='44134' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='44221' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='44240' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='44256' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='44312' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='45011' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='45014' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='45040' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='45231' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='45373' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='45503' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='46060' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='46142' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='46203' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='46226' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='46350' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='46368' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='46514' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='46544' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='46614' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='47150' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='47201' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='47362' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='47374' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='47401' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='47905' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='48066' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='48073' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='48104' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='48126' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='48127' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='48146' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='48180' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='48183' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='48185' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='48187' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='48205' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='48227' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='48234' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='48237' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='48307' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='48310' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='48601' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='48640' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='48858' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='48911' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='49201' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='49423' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='49505' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='50315' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='50322' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='50701' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='52001' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='52240' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='52302' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='52402' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='52601' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='53081' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='53132' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='53142' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='53186' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='53209' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='53214' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='53711' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='54302' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='54401' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='54601' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='54703' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='54880' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='54915' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='55016' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='55044' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='55106' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='55113' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='55122' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='55124' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='55125' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='55369' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='55407' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='55433' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='55901' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='56301' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='56560' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='57103' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='57401' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='57701' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='58103' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='59102' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='59405' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='59601' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='59715' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='59801' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='60004' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='60016' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='60025' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='60035' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='60067' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='60068' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='60076' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='60089' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='60090' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='60098' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='60126' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='60174' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='60188' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='60201' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='60302' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='60423' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='60440' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='60441' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='60462' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='60477' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='60505' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='60540' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='60543' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='60610' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='60623' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='60653' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='61032' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='61107' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='61604' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='61701' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='61761' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='61821' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='61832' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='62301' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='62521' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='63116' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='63122' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='63301' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='63376' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='64055' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='64118' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='65109' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='65203' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='65807' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='66062' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='66212' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='66502' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='67212' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='67846' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='68025' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='68104' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='68701' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='68801' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='70065' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='70506' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='70601' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='71111' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='71203' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='71603' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='71854' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='71901' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='72032' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='72209' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='72401' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='72701' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='72756' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='72762' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='73034' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='73071' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='73120' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='73505' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='74012' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='74133' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='74403' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='75002' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='75007' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='75019' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='75023' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='75034' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='75043' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='75051' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='75056' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='75061' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='75080' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='75081' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='75104' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='75150' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='75217' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='75220' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='75701' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='76017' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='76021' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='76051' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='76063' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='76106' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='76117' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='76248' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='76706' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='76903' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='77036' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='77041' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='77070' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='77095' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='77301' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='77340' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='77489' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='77506' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='77520' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='77536' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='77571' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='77573' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='77581' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='77590' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='77642' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='77705' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='77803' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='77840' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='78041' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='78207' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='78415' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='78501' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='78521' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='78539' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='78550' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='78577' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='78664' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='78666' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='78745' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='79109' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='79424' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='79605' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='79762' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='79907' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='80004' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='80013' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='80020' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='80022' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='80027' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='80112' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='80122' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='80134' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='80219' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='80229' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='80501' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='80525' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='80538' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='80634' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='80906' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='81001' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='82001' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='83201' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='83301' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='83501' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='83605' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='83642' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='83704' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='84020' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='84041' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='84043' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='84057' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='84062' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='84084' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='84106' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='84107' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='84321' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='84604' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='85023' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='85204' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='85224' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='85234' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='85254' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='85281' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='85301' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='85323' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='85345' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='85364' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='85635' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='85705' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='86442' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='87105' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='87124' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='87401' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='87505' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='88001' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='88101' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='88220' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='89015' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='89031' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='89115' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='89431' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='89502' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='90004' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='90008' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='90032' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='90036' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='90045' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='90049' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='90278' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='90301' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='90503' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='90604' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='90640' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='90660' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='90712' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='90805' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='91104' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='91360' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='91505' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='91730' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='91761' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='91767' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='91776' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='91911' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='91941' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='92020' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='92024' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='92025' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='92037' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='92054' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='92105' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='92236' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='92253' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='92307' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='92345' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='92374' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='92399' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='92404' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='92503' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='92530' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='92553' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='92563' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='92592' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='92627' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='92630' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='92646' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='92672' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='92677' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='92683' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='92691' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='92704' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='92804' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='93010' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='93030' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='93101' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='93277' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='93309' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='93405' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='93454' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='93534' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='93727' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='93905' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='94061' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='94086' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='94109' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='94110' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='94122' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='94403' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='94509' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='94513' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='94521' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='94526' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='94533' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='94568' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='94591' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='94601' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='95037' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='95051' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='95123' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='95207' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='95240' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='95336' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='95351' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='95610' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='95616' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='95661' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='95687' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='95695' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='95823' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='95928' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='96003' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='97030' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='97123' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='97206' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='97224' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='97301' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='97405' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='97477' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='97504' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='97756' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='98002' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='98006' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='98026' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='98031' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='98042' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='98052' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='98059' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='98103' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='98105' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='98115' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='98198' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='98208' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='98226' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='98270' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='98502' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='98632' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='98661' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='99207' />
              <groupfilter function='member' level='[none:Postal Code:ok]' member='99301' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[none:Region:nk]'>
            <groupfilter function='member' level='[none:Region:nk]' member='&quot;South&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[yr:Order Date:ok]'>
            <groupfilter function='level-members' level='[yr:Order Date:ok]' />
          </filter>
          <slices>
            <column>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[Inclusions (Country/Region,State)]</column>
            <column>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[none:Region:nk]</column>
            <column>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[none:City:nk]</column>
            <column>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[none:Postal Code:ok]</column>
            <column>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[yr:Order Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[sum:Profit:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1vrhlw30lqg3h11cnvldo19i9w8e].[none:Country/Region:nk] / ([federated.1vrhlw30lqg3h11cnvldo19i9w8e].[none:State:nk] / ([federated.1vrhlw30lqg3h11cnvldo19i9w8e].[none:City:nk] / [federated.1vrhlw30lqg3h11cnvldo19i9w8e].[none:Sub-Category:nk])))</rows>
        <cols>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[sum:Profit:qk]</cols>
      </table>
      <simple-id uuid='{9761E7B9-D58D-418C-80CF-C5788808CAE7}' />
    </worksheet>
    <worksheet name='Profit map'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore)' name='federated.1vrhlw30lqg3h11cnvldo19i9w8e' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1vrhlw30lqg3h11cnvldo19i9w8e'>
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[none:Region:nk]'>
            <groupfilter function='member' level='[none:Region:nk]' member='&quot;South&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[none:Sub-Category:nk]'>
            <groupfilter function='level-members' level='[none:Sub-Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[yr:Order Date:ok]' filter-group='3'>
            <groupfilter function='member' level='[yr:Order Date:ok]' member='2018' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[none:Region:nk]</column>
            <column>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[none:Sub-Category:nk]</column>
            <column>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[yr:Order Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[Longitude (generated)]' field-type='quantitative' max='-8402248.8684112635' min='-10644127.102456611' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[Latitude (generated)]' field-type='quantitative' max='5023859.2164002527' min='2657023.7700418849' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[sum:Profit:qk]' value='' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[sum:Profit:qk]' palette='red_green_white_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[sum:Profit:qk]' />
              <text column='[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[sum:Profit:qk]' />
              <lod column='[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[none:State:nk]' />
              <lod column='[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[none:Country/Region:nk]' />
              <geometry column='[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[Latitude (generated)]</rows>
        <cols>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{DE53CEE9-24A5-4E85-BD02-6DC52931CF00}' />
    </worksheet>
    <worksheet name='Sales by Product/Region'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore)' name='federated.1vrhlw30lqg3h11cnvldo19i9w8e' />
          </datasources>
          <datasource-dependencies datasource='federated.1vrhlw30lqg3h11cnvldo19i9w8e'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[none:Sub-Category:nk]'>
            <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Machines&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[yr:Order Date:ok]'>
            <groupfilter function='level-members' level='[yr:Order Date:ok]' />
          </filter>
          <slices>
            <column>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[yr:Order Date:ok]</column>
            <column>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[none:Sub-Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[sum:Profit:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1vrhlw30lqg3h11cnvldo19i9w8e].[none:Region:nk] * [federated.1vrhlw30lqg3h11cnvldo19i9w8e].[sum:Sales:qk])</rows>
        <cols>([federated.1vrhlw30lqg3h11cnvldo19i9w8e].[yr:Order Date:ok] / ([federated.1vrhlw30lqg3h11cnvldo19i9w8e].[none:Category:nk] / [federated.1vrhlw30lqg3h11cnvldo19i9w8e].[none:Sub-Category:nk]))</cols>
      </table>
      <simple-id uuid='{B461E60D-2371-4EBD-B0B0-D89E623BFE6F}' />
    </worksheet>
    <worksheet name='Sales in the South'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore)' name='federated.1vrhlw30lqg3h11cnvldo19i9w8e' />
          </datasources>
          <datasource-dependencies datasource='federated.1vrhlw30lqg3h11cnvldo19i9w8e'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[Action (Country/Region,State)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_0BDFB529D4DB43FBAE3092CC7B4D8BA8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country/Region]' />
              <groupfilter function='level-members' level='[State]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[none:Region:nk]'>
            <groupfilter function='member' level='[none:Region:nk]' member='&quot;South&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[none:Sub-Category:nk]'>
            <groupfilter function='level-members' level='[none:Sub-Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[yr:Order Date:ok]' filter-group='3'>
            <groupfilter function='member' level='[yr:Order Date:ok]' member='2018' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[yr:Order Date:ok]</column>
            <column>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[none:Sub-Category:nk]</column>
            <column>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[none:Region:nk]</column>
            <column>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[Action (Country/Region,State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[none:Region:nk]' value='false' />
            <format attr='display' field='[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[none:Category:nk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[sum:Profit:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1vrhlw30lqg3h11cnvldo19i9w8e].[none:Region:nk] * [federated.1vrhlw30lqg3h11cnvldo19i9w8e].[sum:Sales:qk])</rows>
        <cols>([federated.1vrhlw30lqg3h11cnvldo19i9w8e].[yr:Order Date:ok] / ([federated.1vrhlw30lqg3h11cnvldo19i9w8e].[none:Category:nk] / [federated.1vrhlw30lqg3h11cnvldo19i9w8e].[none:Sub-Category:nk]))</cols>
      </table>
      <simple-id uuid='{8F92DD90-9DA2-4F21-B3F4-F71029B19B71}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Improve Profits in the South' type='storyboard'>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type-v2='layout-flow' w='98426' x='787' y='830'>
            <zone h='5187' id='3' type-v2='title' w='98426' x='787' y='830' />
            <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98426' x='787' y='6017' />
            <zone h='82676' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98426' x='787' y='16494'>
              <flipboard active-id='9' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Sales and profit by year' captured-sheet='Sales in the South' id='1'>
                    <capturedDeltas>
                      <worksheet name='Sales in the South'>
                        <filter class='categorical' column='[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[yr:Order Date:ok]'>
                          <groupfilter function='level-members' level='[yr:Order Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Sales and profit by year' captured-sheet='Sales in the South' id='2'>
                    <capturedDeltas>
                      <worksheet name='Sales in the South'>
                        <filter class='categorical' column='[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[none:Sub-Category:nk]'>
                          <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Machines&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                        <filter class='categorical' column='[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[yr:Order Date:ok]'>
                          <groupfilter function='level-members' level='[yr:Order Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Underperforming items in the South' captured-sheet='Regional Sales and Profit' id='3'>
                    <capturedDeltas>
                      <worksheet name='Profit map'>
                        <filter class='categorical' column='[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[yr:Order Date:ok]'>
                          <groupfilter function='member' level='[yr:Order Date:ok]' member='2019' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Sales in the South'>
                        <filter class='categorical' column='[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[yr:Order Date:ok]'>
                          <groupfilter function='member' level='[yr:Order Date:ok]' member='2019' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Profit in North Carolina, 2018-2021' captured-sheet='Regional Sales and Profit' id='4'>
                    <capturedDeltas>
                      <worksheet name='Profit map'>
                        <filter class='categorical' column='[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[yr:Order Date:ok]'>
                          <groupfilter function='level-members' level='[yr:Order Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[Latitude (generated)]' field-type='quantitative' max='5271152.672973874' min='2807228.7055600821' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[Longitude (generated)]' field-type='quantitative' max='-6429871.4933885755' min='-12589681.320134737' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[Longitude (generated)]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[Latitude (generated)]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[none:Country/Region:nk]</field>
                                  <field>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[none:State:nk]</field>
                                  <field>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[sum:Profit:qk]</field>
                                  <field>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[Geometry (generated)]</field>
                                  <field>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[Latitude (generated)]</field>
                                  <field>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[Longitude (generated)]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>&quot;United States&quot;</value>
                                <value>&quot;North Carolina&quot;</value>
                                <value>-7490.9122000000043</value>
                                <value>&quot;MULTIPOLYGON(((-75.7523 35.1943,-75.6814 35.2334,-75.5217 35.2695,-75.4687 35.5722,-75.4846 35.4044,-75.5277 35.2167,-75.5772 35.2348,-75.7508 35.1898,-75.7523 35.1943)),((-75.887 36.5508,-75.867 36.5508,-75.7725 36.2317,-75.6012 35.9079,-75.6671 35.9717,-75.698 36.0598,-75.7374 36.042,-75.7761 36.231,-75.7877 36.2286,-75.8438 36.4242,-75.8926 36.4731,-75.887 36.5508)),((-75.7098 35.9399,-75.614 35.8499,-75.6503 35.8252,-75.7098 35.9399)),((-78.5749 33.8803,-79.0712 34.2992,-79.45 34.621,-79.6753 34.8047,-79.9276 34.8066,-80.3204 34.814,-80.7975 34.8198,-80.782 34.9358,-80.935 35.1074,-81.0415 35.0447,-81.0572 35.0861,-81.0325 35.11,-81.0332 35.1487,-81.3281 35.1635,-81.7681 35.1805,-82.2162 35.196,-82.2749 35.2001,-82.3536 35.1908,-82.384 35.2105,-82.4176 35.2001,-82.4347 35.1683,-82.4596 35.1781,-82.5749 35.1455,-82.6131 35.1397,-82.7645 35.0682,-82.7848 35.0857,-83.1085 35.0007,-83.5494 34.9925,-83.62 34.9866,-84.3219 34.9884,-84.2902 35.2256,-84.2237 35.2691,-84.1991 35.2437,-84.0981 35.2472,-84.0291 35.2922,-84.0383 35.3478,-84.0074 35.3716,-84.0233 35.4115,-83.9611 35.4637,-83.9118 35.476,-83.8826 35.5172,-83.8256 35.5238,-83.7717 35.5621,-83.663 35.5691,-83.6019 35.5782,-83.582 35.5627,-83.4983 35.563,-83.4458 35.6118,-83.4216 35.6112,-83.335 35.6655,-83.3105 35.6545,-83.2542 35.6958,-83.2555 35.715,-83.1857 35.7299,-83.1592 35.7649,-83.1202 35.7662,-83.0787 35.7895,-82.9924 35.7738,-82.9616 35.7911,-82.9206 35.8685,-82.8966 35.8785,-82.9138 35.9245,-82.8985 35.9451,-82.8516 35.9496,-82.8204 35.9221,-82.7749 35.972,-82.7759 36.0008,-82.6364 36.0659,-82.6029 36.0398,-82.6109 35.9674,-82.5579 35.9539,-82.5054 35.9777,-82.4607 36.0078,-82.4167 36.0728,-82.3557 36.1153,-82.289 36.1357,-82.2452 36.131,-82.2221 36.1569,-82.1479 36.1495,-82.1288 36.1039,-82.0804 36.103,-82.0331 36.1204,-81.9182 36.287,-81.8655 36.3293,-81.7931 36.3625,-81.7649 36.3387,-81.7074 36.3352,-81.7286 36.3912,-81.7156 36.4575,-81.6949 36.4674,-81.7081 36.5357,-81.6775 36.5882,-81.3532 36.5747,-81.2919 36.5749,-80.838 36.5591,-80.7304 36.5623,-80.2951 36.544,-80.0535 36.5425,-79.5104 36.5408,-79.1379 36.5417,-78.457 36.5425,-78.3239 36.5438,-77.7671 36.5454,-77.2969 36.5448,-77.1645 36.5463,-76.916 36.5438,-76.9159 36.5521,-76.542 36.5507,-76.036 36.5506,-76.0398 36.5014,-75.9473 36.36,-75.9148 36.3517,-75.7986 36.0721,-75.9424 36.2848,-76.002 36.3238,-75.9243 36.1641,-76.0215 36.1901,-76.1284 36.2889,-76.1996 36.318,-76.2172 36.2968,-76.0773 36.193,-76.0615 36.1455,-76.1879 36.1255,-76.2863 36.2168,-76.2151 36.0969,-76.3734 36.1385,-76.3031 36.0993,-76.4915 36.0848,-76.4086 36.0681,-76.5136 36.0062,-76.6071 36.0564,-76.6777 36.0465,-76.7216 36.1503,-76.6723 36.3039,-76.7497 36.3402,-76.7009 36.2943,-76.7232 36.2438,-76.7556 36.152,-76.6825 35.9895,-76.6994 35.9268,-76.5575 35.9404,-76.401 35.982,-76.3675 35.9308,-76.272 35.9717,-76.0625 35.9906,-76.0464 35.6721,-76.1687 35.6987,-76.0441 35.6476,-76.0126 35.6691,-75.9827 35.772,-75.9857 35.8891,-75.8572 35.9455,-75.7833 35.934,-75.7288 35.8248,-75.7174 35.6931,-75.7796 35.6843,-75.7337 35.6294,-75.7827 35.5774,-75.8548 35.5846,-75.8921 35.6435,-75.883 35.5824,-75.9523 35.5329,-76.0274 35.4266,-76.113 35.3549,-76.2788 35.3431,-76.3919 35.4304,-76.47 35.3723,-76.5401 35.4093,-76.5796 35.5078,-76.4724 35.5111,-76.454 35.5523,-76.4724 35.5566,-76.6376 35.5134,-76.5755 35.3882,-76.6693 35.4335,-76.769 35.4276,-77.0358 35.4928,-76.9681 35.433,-76.9254 35.4487,-76.6254 35.3421,-76.6095 35.3283,-76.5011 35.3148,-76.4679 35.2612,-76.5742 35.2405,-76.5426 35.148,-76.6092 35.0673,-76.8053 34.9669,-76.9428 35.0485,-76.9389 35.09,-76.9985 35.0768,-77.0309 35.1344,-77.0569 35.0935,-77.0406 35.0996,-76.935 34.9721,-76.7607 34.9153,-76.6847 34.9558,-76.6762 34.9699,-76.5172 35.0034,-76.4947 34.9633,-76.3788 34.933,-76.3174 34.9691,-76.3344 35.0263,-76.2766 34.9598,-76.2972 34.9237,-76.3337 34.9211,-76.4011 34.8864,-76.5197 34.7187,-76.5752 34.7219,-76.608 34.8071,-76.6273 34.7232,-76.6828 34.7787,-76.7668 34.7549,-76.7107 34.7197,-76.9019 34.7291,-77.0292 34.6825,-77.0909 34.6852,-77.1564 34.7654,-77.1187 34.6894,-77.3168 34.5465,-77.4025 34.5928,-77.3387 34.6402,-77.4329 34.7377,-77.3725 34.6267,-77.4459 34.6138,-77.372 34.5183,-77.5357 34.4596,-77.7552 34.3064,-77.8606 34.1494,-77.937 33.928,-77.9615 33.8403,-78.0047 33.8592,-77.9381 33.9322,-77.9164 34.0091,-77.9543 34.2253,-77.9697 34.1671,-77.9398 34.058,-78.0231 33.9158,-78.0191 33.887,-78.1716 33.9282,-78.3878 33.9059,-78.5594 33.8669,-78.5749 33.8803)),((-75.7811 35.1892,-75.9941 35.0777,-75.9896 35.1148,-75.7811 35.1892)),((-76.0134 36.5506,-75.9838 36.5506,-75.909 36.5507,-75.9221 36.4827,-75.9894 36.4947,-76.0134 36.5506)),((-76.3416 34.8308,-76.4958 34.6607,-76.4404 34.748,-76.3416 34.8308)),((-76.4639 35.076,-76.4334 34.9635,-76.4865 34.9663,-76.4639 35.076)),((-76.7413 34.7099,-77.0963 34.643,-77.0538 34.6673,-76.7413 34.7099)))&quot;</value>
                                <value>35.5</value>
                                <value>-80.0</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                      <worksheet name='Sales in the South'>
                        <filter class='categorical' column='[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[Action (Country/Region,State)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action1_0BDFB529D4DB43FBAE3092CC7B4D8BA8]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[Country/Region]' member='&quot;United States&quot;' />
                            <groupfilter function='member' level='[State]' member='&quot;North Carolina&quot;' />
                          </groupfilter>
                        </filter>
                        <filter class='categorical' column='[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[yr:Order Date:ok]'>
                          <groupfilter function='level-members' level='[yr:Order Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Profit in North Carolina, 2018' captured-sheet='Regional Sales and Profit' id='5'>
                    <capturedDeltas>
                      <worksheet name='Profit map'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[Latitude (generated)]' field-type='quantitative' max='5271152.672973874' min='2807228.7055600821' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[Longitude (generated)]' field-type='quantitative' max='-6429871.4933885755' min='-12589681.320134737' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[Longitude (generated)]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[Latitude (generated)]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[none:Country/Region:nk]</field>
                                  <field>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[none:State:nk]</field>
                                  <field>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[sum:Profit:qk]</field>
                                  <field>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[Geometry (generated)]</field>
                                  <field>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[Latitude (generated)]</field>
                                  <field>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[Longitude (generated)]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>&quot;United States&quot;</value>
                                <value>&quot;North Carolina&quot;</value>
                                <value>-1415.0991000000006</value>
                                <value>&quot;MULTIPOLYGON(((-75.7523 35.1943,-75.6814 35.2334,-75.5217 35.2695,-75.4687 35.5722,-75.4846 35.4044,-75.5277 35.2167,-75.5772 35.2348,-75.7508 35.1898,-75.7523 35.1943)),((-75.887 36.5508,-75.867 36.5508,-75.7725 36.2317,-75.6012 35.9079,-75.6671 35.9717,-75.698 36.0598,-75.7374 36.042,-75.7761 36.231,-75.7877 36.2286,-75.8438 36.4242,-75.8926 36.4731,-75.887 36.5508)),((-75.7098 35.9399,-75.614 35.8499,-75.6503 35.8252,-75.7098 35.9399)),((-78.5749 33.8803,-79.0712 34.2992,-79.45 34.621,-79.6753 34.8047,-79.9276 34.8066,-80.3204 34.814,-80.7975 34.8198,-80.782 34.9358,-80.935 35.1074,-81.0415 35.0447,-81.0572 35.0861,-81.0325 35.11,-81.0332 35.1487,-81.3281 35.1635,-81.7681 35.1805,-82.2162 35.196,-82.2749 35.2001,-82.3536 35.1908,-82.384 35.2105,-82.4176 35.2001,-82.4347 35.1683,-82.4596 35.1781,-82.5749 35.1455,-82.6131 35.1397,-82.7645 35.0682,-82.7848 35.0857,-83.1085 35.0007,-83.5494 34.9925,-83.62 34.9866,-84.3219 34.9884,-84.2902 35.2256,-84.2237 35.2691,-84.1991 35.2437,-84.0981 35.2472,-84.0291 35.2922,-84.0383 35.3478,-84.0074 35.3716,-84.0233 35.4115,-83.9611 35.4637,-83.9118 35.476,-83.8826 35.5172,-83.8256 35.5238,-83.7717 35.5621,-83.663 35.5691,-83.6019 35.5782,-83.582 35.5627,-83.4983 35.563,-83.4458 35.6118,-83.4216 35.6112,-83.335 35.6655,-83.3105 35.6545,-83.2542 35.6958,-83.2555 35.715,-83.1857 35.7299,-83.1592 35.7649,-83.1202 35.7662,-83.0787 35.7895,-82.9924 35.7738,-82.9616 35.7911,-82.9206 35.8685,-82.8966 35.8785,-82.9138 35.9245,-82.8985 35.9451,-82.8516 35.9496,-82.8204 35.9221,-82.7749 35.972,-82.7759 36.0008,-82.6364 36.0659,-82.6029 36.0398,-82.6109 35.9674,-82.5579 35.9539,-82.5054 35.9777,-82.4607 36.0078,-82.4167 36.0728,-82.3557 36.1153,-82.289 36.1357,-82.2452 36.131,-82.2221 36.1569,-82.1479 36.1495,-82.1288 36.1039,-82.0804 36.103,-82.0331 36.1204,-81.9182 36.287,-81.8655 36.3293,-81.7931 36.3625,-81.7649 36.3387,-81.7074 36.3352,-81.7286 36.3912,-81.7156 36.4575,-81.6949 36.4674,-81.7081 36.5357,-81.6775 36.5882,-81.3532 36.5747,-81.2919 36.5749,-80.838 36.5591,-80.7304 36.5623,-80.2951 36.544,-80.0535 36.5425,-79.5104 36.5408,-79.1379 36.5417,-78.457 36.5425,-78.3239 36.5438,-77.7671 36.5454,-77.2969 36.5448,-77.1645 36.5463,-76.916 36.5438,-76.9159 36.5521,-76.542 36.5507,-76.036 36.5506,-76.0398 36.5014,-75.9473 36.36,-75.9148 36.3517,-75.7986 36.0721,-75.9424 36.2848,-76.002 36.3238,-75.9243 36.1641,-76.0215 36.1901,-76.1284 36.2889,-76.1996 36.318,-76.2172 36.2968,-76.0773 36.193,-76.0615 36.1455,-76.1879 36.1255,-76.2863 36.2168,-76.2151 36.0969,-76.3734 36.1385,-76.3031 36.0993,-76.4915 36.0848,-76.4086 36.0681,-76.5136 36.0062,-76.6071 36.0564,-76.6777 36.0465,-76.7216 36.1503,-76.6723 36.3039,-76.7497 36.3402,-76.7009 36.2943,-76.7232 36.2438,-76.7556 36.152,-76.6825 35.9895,-76.6994 35.9268,-76.5575 35.9404,-76.401 35.982,-76.3675 35.9308,-76.272 35.9717,-76.0625 35.9906,-76.0464 35.6721,-76.1687 35.6987,-76.0441 35.6476,-76.0126 35.6691,-75.9827 35.772,-75.9857 35.8891,-75.8572 35.9455,-75.7833 35.934,-75.7288 35.8248,-75.7174 35.6931,-75.7796 35.6843,-75.7337 35.6294,-75.7827 35.5774,-75.8548 35.5846,-75.8921 35.6435,-75.883 35.5824,-75.9523 35.5329,-76.0274 35.4266,-76.113 35.3549,-76.2788 35.3431,-76.3919 35.4304,-76.47 35.3723,-76.5401 35.4093,-76.5796 35.5078,-76.4724 35.5111,-76.454 35.5523,-76.4724 35.5566,-76.6376 35.5134,-76.5755 35.3882,-76.6693 35.4335,-76.769 35.4276,-77.0358 35.4928,-76.9681 35.433,-76.9254 35.4487,-76.6254 35.3421,-76.6095 35.3283,-76.5011 35.3148,-76.4679 35.2612,-76.5742 35.2405,-76.5426 35.148,-76.6092 35.0673,-76.8053 34.9669,-76.9428 35.0485,-76.9389 35.09,-76.9985 35.0768,-77.0309 35.1344,-77.0569 35.0935,-77.0406 35.0996,-76.935 34.9721,-76.7607 34.9153,-76.6847 34.9558,-76.6762 34.9699,-76.5172 35.0034,-76.4947 34.9633,-76.3788 34.933,-76.3174 34.9691,-76.3344 35.0263,-76.2766 34.9598,-76.2972 34.9237,-76.3337 34.9211,-76.4011 34.8864,-76.5197 34.7187,-76.5752 34.7219,-76.608 34.8071,-76.6273 34.7232,-76.6828 34.7787,-76.7668 34.7549,-76.7107 34.7197,-76.9019 34.7291,-77.0292 34.6825,-77.0909 34.6852,-77.1564 34.7654,-77.1187 34.6894,-77.3168 34.5465,-77.4025 34.5928,-77.3387 34.6402,-77.4329 34.7377,-77.3725 34.6267,-77.4459 34.6138,-77.372 34.5183,-77.5357 34.4596,-77.7552 34.3064,-77.8606 34.1494,-77.937 33.928,-77.9615 33.8403,-78.0047 33.8592,-77.9381 33.9322,-77.9164 34.0091,-77.9543 34.2253,-77.9697 34.1671,-77.9398 34.058,-78.0231 33.9158,-78.0191 33.887,-78.1716 33.9282,-78.3878 33.9059,-78.5594 33.8669,-78.5749 33.8803)),((-75.7811 35.1892,-75.9941 35.0777,-75.9896 35.1148,-75.7811 35.1892)),((-76.0134 36.5506,-75.9838 36.5506,-75.909 36.5507,-75.9221 36.4827,-75.9894 36.4947,-76.0134 36.5506)),((-76.3416 34.8308,-76.4958 34.6607,-76.4404 34.748,-76.3416 34.8308)),((-76.4639 35.076,-76.4334 34.9635,-76.4865 34.9663,-76.4639 35.076)),((-76.7413 34.7099,-77.0963 34.643,-77.0538 34.6673,-76.7413 34.7099)))&quot;</value>
                                <value>35.5</value>
                                <value>-80.0</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                      <worksheet name='Sales in the South'>
                        <filter class='categorical' column='[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[Action (Country/Region,State)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action1_0BDFB529D4DB43FBAE3092CC7B4D8BA8]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[Country/Region]' member='&quot;United States&quot;' />
                            <groupfilter function='member' level='[State]' member='&quot;North Carolina&quot;' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Profit in North Carolina, 2019' captured-sheet='Regional Sales and Profit' id='6'>
                    <capturedDeltas>
                      <worksheet name='Profit map'>
                        <filter class='categorical' column='[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[yr:Order Date:ok]'>
                          <groupfilter function='member' level='[yr:Order Date:ok]' member='2019' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[Latitude (generated)]' field-type='quantitative' max='5271152.672973874' min='2807228.7055600821' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[Longitude (generated)]' field-type='quantitative' max='-6429871.4933885755' min='-12589681.320134737' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[Longitude (generated)]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[Latitude (generated)]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[none:Country/Region:nk]</field>
                                  <field>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[none:State:nk]</field>
                                  <field>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[sum:Profit:qk]</field>
                                  <field>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[Geometry (generated)]</field>
                                  <field>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[Latitude (generated)]</field>
                                  <field>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[Longitude (generated)]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>&quot;United States&quot;</value>
                                <value>&quot;North Carolina&quot;</value>
                                <value>-1248.1208000000004</value>
                                <value>&quot;MULTIPOLYGON(((-75.7523 35.1943,-75.6814 35.2334,-75.5217 35.2695,-75.4687 35.5722,-75.4846 35.4044,-75.5277 35.2167,-75.5772 35.2348,-75.7508 35.1898,-75.7523 35.1943)),((-75.887 36.5508,-75.867 36.5508,-75.7725 36.2317,-75.6012 35.9079,-75.6671 35.9717,-75.698 36.0598,-75.7374 36.042,-75.7761 36.231,-75.7877 36.2286,-75.8438 36.4242,-75.8926 36.4731,-75.887 36.5508)),((-75.7098 35.9399,-75.614 35.8499,-75.6503 35.8252,-75.7098 35.9399)),((-78.5749 33.8803,-79.0712 34.2992,-79.45 34.621,-79.6753 34.8047,-79.9276 34.8066,-80.3204 34.814,-80.7975 34.8198,-80.782 34.9358,-80.935 35.1074,-81.0415 35.0447,-81.0572 35.0861,-81.0325 35.11,-81.0332 35.1487,-81.3281 35.1635,-81.7681 35.1805,-82.2162 35.196,-82.2749 35.2001,-82.3536 35.1908,-82.384 35.2105,-82.4176 35.2001,-82.4347 35.1683,-82.4596 35.1781,-82.5749 35.1455,-82.6131 35.1397,-82.7645 35.0682,-82.7848 35.0857,-83.1085 35.0007,-83.5494 34.9925,-83.62 34.9866,-84.3219 34.9884,-84.2902 35.2256,-84.2237 35.2691,-84.1991 35.2437,-84.0981 35.2472,-84.0291 35.2922,-84.0383 35.3478,-84.0074 35.3716,-84.0233 35.4115,-83.9611 35.4637,-83.9118 35.476,-83.8826 35.5172,-83.8256 35.5238,-83.7717 35.5621,-83.663 35.5691,-83.6019 35.5782,-83.582 35.5627,-83.4983 35.563,-83.4458 35.6118,-83.4216 35.6112,-83.335 35.6655,-83.3105 35.6545,-83.2542 35.6958,-83.2555 35.715,-83.1857 35.7299,-83.1592 35.7649,-83.1202 35.7662,-83.0787 35.7895,-82.9924 35.7738,-82.9616 35.7911,-82.9206 35.8685,-82.8966 35.8785,-82.9138 35.9245,-82.8985 35.9451,-82.8516 35.9496,-82.8204 35.9221,-82.7749 35.972,-82.7759 36.0008,-82.6364 36.0659,-82.6029 36.0398,-82.6109 35.9674,-82.5579 35.9539,-82.5054 35.9777,-82.4607 36.0078,-82.4167 36.0728,-82.3557 36.1153,-82.289 36.1357,-82.2452 36.131,-82.2221 36.1569,-82.1479 36.1495,-82.1288 36.1039,-82.0804 36.103,-82.0331 36.1204,-81.9182 36.287,-81.8655 36.3293,-81.7931 36.3625,-81.7649 36.3387,-81.7074 36.3352,-81.7286 36.3912,-81.7156 36.4575,-81.6949 36.4674,-81.7081 36.5357,-81.6775 36.5882,-81.3532 36.5747,-81.2919 36.5749,-80.838 36.5591,-80.7304 36.5623,-80.2951 36.544,-80.0535 36.5425,-79.5104 36.5408,-79.1379 36.5417,-78.457 36.5425,-78.3239 36.5438,-77.7671 36.5454,-77.2969 36.5448,-77.1645 36.5463,-76.916 36.5438,-76.9159 36.5521,-76.542 36.5507,-76.036 36.5506,-76.0398 36.5014,-75.9473 36.36,-75.9148 36.3517,-75.7986 36.0721,-75.9424 36.2848,-76.002 36.3238,-75.9243 36.1641,-76.0215 36.1901,-76.1284 36.2889,-76.1996 36.318,-76.2172 36.2968,-76.0773 36.193,-76.0615 36.1455,-76.1879 36.1255,-76.2863 36.2168,-76.2151 36.0969,-76.3734 36.1385,-76.3031 36.0993,-76.4915 36.0848,-76.4086 36.0681,-76.5136 36.0062,-76.6071 36.0564,-76.6777 36.0465,-76.7216 36.1503,-76.6723 36.3039,-76.7497 36.3402,-76.7009 36.2943,-76.7232 36.2438,-76.7556 36.152,-76.6825 35.9895,-76.6994 35.9268,-76.5575 35.9404,-76.401 35.982,-76.3675 35.9308,-76.272 35.9717,-76.0625 35.9906,-76.0464 35.6721,-76.1687 35.6987,-76.0441 35.6476,-76.0126 35.6691,-75.9827 35.772,-75.9857 35.8891,-75.8572 35.9455,-75.7833 35.934,-75.7288 35.8248,-75.7174 35.6931,-75.7796 35.6843,-75.7337 35.6294,-75.7827 35.5774,-75.8548 35.5846,-75.8921 35.6435,-75.883 35.5824,-75.9523 35.5329,-76.0274 35.4266,-76.113 35.3549,-76.2788 35.3431,-76.3919 35.4304,-76.47 35.3723,-76.5401 35.4093,-76.5796 35.5078,-76.4724 35.5111,-76.454 35.5523,-76.4724 35.5566,-76.6376 35.5134,-76.5755 35.3882,-76.6693 35.4335,-76.769 35.4276,-77.0358 35.4928,-76.9681 35.433,-76.9254 35.4487,-76.6254 35.3421,-76.6095 35.3283,-76.5011 35.3148,-76.4679 35.2612,-76.5742 35.2405,-76.5426 35.148,-76.6092 35.0673,-76.8053 34.9669,-76.9428 35.0485,-76.9389 35.09,-76.9985 35.0768,-77.0309 35.1344,-77.0569 35.0935,-77.0406 35.0996,-76.935 34.9721,-76.7607 34.9153,-76.6847 34.9558,-76.6762 34.9699,-76.5172 35.0034,-76.4947 34.9633,-76.3788 34.933,-76.3174 34.9691,-76.3344 35.0263,-76.2766 34.9598,-76.2972 34.9237,-76.3337 34.9211,-76.4011 34.8864,-76.5197 34.7187,-76.5752 34.7219,-76.608 34.8071,-76.6273 34.7232,-76.6828 34.7787,-76.7668 34.7549,-76.7107 34.7197,-76.9019 34.7291,-77.0292 34.6825,-77.0909 34.6852,-77.1564 34.7654,-77.1187 34.6894,-77.3168 34.5465,-77.4025 34.5928,-77.3387 34.6402,-77.4329 34.7377,-77.3725 34.6267,-77.4459 34.6138,-77.372 34.5183,-77.5357 34.4596,-77.7552 34.3064,-77.8606 34.1494,-77.937 33.928,-77.9615 33.8403,-78.0047 33.8592,-77.9381 33.9322,-77.9164 34.0091,-77.9543 34.2253,-77.9697 34.1671,-77.9398 34.058,-78.0231 33.9158,-78.0191 33.887,-78.1716 33.9282,-78.3878 33.9059,-78.5594 33.8669,-78.5749 33.8803)),((-75.7811 35.1892,-75.9941 35.0777,-75.9896 35.1148,-75.7811 35.1892)),((-76.0134 36.5506,-75.9838 36.5506,-75.909 36.5507,-75.9221 36.4827,-75.9894 36.4947,-76.0134 36.5506)),((-76.3416 34.8308,-76.4958 34.6607,-76.4404 34.748,-76.3416 34.8308)),((-76.4639 35.076,-76.4334 34.9635,-76.4865 34.9663,-76.4639 35.076)),((-76.7413 34.7099,-77.0963 34.643,-77.0538 34.6673,-76.7413 34.7099)))&quot;</value>
                                <value>35.5</value>
                                <value>-80.0</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                      <worksheet name='Sales in the South'>
                        <filter class='categorical' column='[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[Action (Country/Region,State)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action1_0BDFB529D4DB43FBAE3092CC7B4D8BA8]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[Country/Region]' member='&quot;United States&quot;' />
                            <groupfilter function='member' level='[State]' member='&quot;North Carolina&quot;' />
                          </groupfilter>
                        </filter>
                        <filter class='categorical' column='[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[yr:Order Date:ok]'>
                          <groupfilter function='member' level='[yr:Order Date:ok]' member='2019' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Profit in North Carolina, 2020' captured-sheet='Regional Sales and Profit' id='7'>
                    <capturedDeltas>
                      <worksheet name='Profit map'>
                        <filter class='categorical' column='[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[yr:Order Date:ok]'>
                          <groupfilter function='member' level='[yr:Order Date:ok]' member='2020' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[Latitude (generated)]' field-type='quantitative' max='5271152.672973874' min='2807228.7055600821' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[Longitude (generated)]' field-type='quantitative' max='-6429871.4933885755' min='-12589681.320134737' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[Longitude (generated)]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[Latitude (generated)]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[none:Country/Region:nk]</field>
                                  <field>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[none:State:nk]</field>
                                  <field>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[sum:Profit:qk]</field>
                                  <field>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[Geometry (generated)]</field>
                                  <field>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[Latitude (generated)]</field>
                                  <field>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[Longitude (generated)]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>&quot;United States&quot;</value>
                                <value>&quot;North Carolina&quot;</value>
                                <value>260.84109999999873</value>
                                <value>&quot;MULTIPOLYGON(((-75.7523 35.1943,-75.6814 35.2334,-75.5217 35.2695,-75.4687 35.5722,-75.4846 35.4044,-75.5277 35.2167,-75.5772 35.2348,-75.7508 35.1898,-75.7523 35.1943)),((-75.887 36.5508,-75.867 36.5508,-75.7725 36.2317,-75.6012 35.9079,-75.6671 35.9717,-75.698 36.0598,-75.7374 36.042,-75.7761 36.231,-75.7877 36.2286,-75.8438 36.4242,-75.8926 36.4731,-75.887 36.5508)),((-75.7098 35.9399,-75.614 35.8499,-75.6503 35.8252,-75.7098 35.9399)),((-78.5749 33.8803,-79.0712 34.2992,-79.45 34.621,-79.6753 34.8047,-79.9276 34.8066,-80.3204 34.814,-80.7975 34.8198,-80.782 34.9358,-80.935 35.1074,-81.0415 35.0447,-81.0572 35.0861,-81.0325 35.11,-81.0332 35.1487,-81.3281 35.1635,-81.7681 35.1805,-82.2162 35.196,-82.2749 35.2001,-82.3536 35.1908,-82.384 35.2105,-82.4176 35.2001,-82.4347 35.1683,-82.4596 35.1781,-82.5749 35.1455,-82.6131 35.1397,-82.7645 35.0682,-82.7848 35.0857,-83.1085 35.0007,-83.5494 34.9925,-83.62 34.9866,-84.3219 34.9884,-84.2902 35.2256,-84.2237 35.2691,-84.1991 35.2437,-84.0981 35.2472,-84.0291 35.2922,-84.0383 35.3478,-84.0074 35.3716,-84.0233 35.4115,-83.9611 35.4637,-83.9118 35.476,-83.8826 35.5172,-83.8256 35.5238,-83.7717 35.5621,-83.663 35.5691,-83.6019 35.5782,-83.582 35.5627,-83.4983 35.563,-83.4458 35.6118,-83.4216 35.6112,-83.335 35.6655,-83.3105 35.6545,-83.2542 35.6958,-83.2555 35.715,-83.1857 35.7299,-83.1592 35.7649,-83.1202 35.7662,-83.0787 35.7895,-82.9924 35.7738,-82.9616 35.7911,-82.9206 35.8685,-82.8966 35.8785,-82.9138 35.9245,-82.8985 35.9451,-82.8516 35.9496,-82.8204 35.9221,-82.7749 35.972,-82.7759 36.0008,-82.6364 36.0659,-82.6029 36.0398,-82.6109 35.9674,-82.5579 35.9539,-82.5054 35.9777,-82.4607 36.0078,-82.4167 36.0728,-82.3557 36.1153,-82.289 36.1357,-82.2452 36.131,-82.2221 36.1569,-82.1479 36.1495,-82.1288 36.1039,-82.0804 36.103,-82.0331 36.1204,-81.9182 36.287,-81.8655 36.3293,-81.7931 36.3625,-81.7649 36.3387,-81.7074 36.3352,-81.7286 36.3912,-81.7156 36.4575,-81.6949 36.4674,-81.7081 36.5357,-81.6775 36.5882,-81.3532 36.5747,-81.2919 36.5749,-80.838 36.5591,-80.7304 36.5623,-80.2951 36.544,-80.0535 36.5425,-79.5104 36.5408,-79.1379 36.5417,-78.457 36.5425,-78.3239 36.5438,-77.7671 36.5454,-77.2969 36.5448,-77.1645 36.5463,-76.916 36.5438,-76.9159 36.5521,-76.542 36.5507,-76.036 36.5506,-76.0398 36.5014,-75.9473 36.36,-75.9148 36.3517,-75.7986 36.0721,-75.9424 36.2848,-76.002 36.3238,-75.9243 36.1641,-76.0215 36.1901,-76.1284 36.2889,-76.1996 36.318,-76.2172 36.2968,-76.0773 36.193,-76.0615 36.1455,-76.1879 36.1255,-76.2863 36.2168,-76.2151 36.0969,-76.3734 36.1385,-76.3031 36.0993,-76.4915 36.0848,-76.4086 36.0681,-76.5136 36.0062,-76.6071 36.0564,-76.6777 36.0465,-76.7216 36.1503,-76.6723 36.3039,-76.7497 36.3402,-76.7009 36.2943,-76.7232 36.2438,-76.7556 36.152,-76.6825 35.9895,-76.6994 35.9268,-76.5575 35.9404,-76.401 35.982,-76.3675 35.9308,-76.272 35.9717,-76.0625 35.9906,-76.0464 35.6721,-76.1687 35.6987,-76.0441 35.6476,-76.0126 35.6691,-75.9827 35.772,-75.9857 35.8891,-75.8572 35.9455,-75.7833 35.934,-75.7288 35.8248,-75.7174 35.6931,-75.7796 35.6843,-75.7337 35.6294,-75.7827 35.5774,-75.8548 35.5846,-75.8921 35.6435,-75.883 35.5824,-75.9523 35.5329,-76.0274 35.4266,-76.113 35.3549,-76.2788 35.3431,-76.3919 35.4304,-76.47 35.3723,-76.5401 35.4093,-76.5796 35.5078,-76.4724 35.5111,-76.454 35.5523,-76.4724 35.5566,-76.6376 35.5134,-76.5755 35.3882,-76.6693 35.4335,-76.769 35.4276,-77.0358 35.4928,-76.9681 35.433,-76.9254 35.4487,-76.6254 35.3421,-76.6095 35.3283,-76.5011 35.3148,-76.4679 35.2612,-76.5742 35.2405,-76.5426 35.148,-76.6092 35.0673,-76.8053 34.9669,-76.9428 35.0485,-76.9389 35.09,-76.9985 35.0768,-77.0309 35.1344,-77.0569 35.0935,-77.0406 35.0996,-76.935 34.9721,-76.7607 34.9153,-76.6847 34.9558,-76.6762 34.9699,-76.5172 35.0034,-76.4947 34.9633,-76.3788 34.933,-76.3174 34.9691,-76.3344 35.0263,-76.2766 34.9598,-76.2972 34.9237,-76.3337 34.9211,-76.4011 34.8864,-76.5197 34.7187,-76.5752 34.7219,-76.608 34.8071,-76.6273 34.7232,-76.6828 34.7787,-76.7668 34.7549,-76.7107 34.7197,-76.9019 34.7291,-77.0292 34.6825,-77.0909 34.6852,-77.1564 34.7654,-77.1187 34.6894,-77.3168 34.5465,-77.4025 34.5928,-77.3387 34.6402,-77.4329 34.7377,-77.3725 34.6267,-77.4459 34.6138,-77.372 34.5183,-77.5357 34.4596,-77.7552 34.3064,-77.8606 34.1494,-77.937 33.928,-77.9615 33.8403,-78.0047 33.8592,-77.9381 33.9322,-77.9164 34.0091,-77.9543 34.2253,-77.9697 34.1671,-77.9398 34.058,-78.0231 33.9158,-78.0191 33.887,-78.1716 33.9282,-78.3878 33.9059,-78.5594 33.8669,-78.5749 33.8803)),((-75.7811 35.1892,-75.9941 35.0777,-75.9896 35.1148,-75.7811 35.1892)),((-76.0134 36.5506,-75.9838 36.5506,-75.909 36.5507,-75.9221 36.4827,-75.9894 36.4947,-76.0134 36.5506)),((-76.3416 34.8308,-76.4958 34.6607,-76.4404 34.748,-76.3416 34.8308)),((-76.4639 35.076,-76.4334 34.9635,-76.4865 34.9663,-76.4639 35.076)),((-76.7413 34.7099,-77.0963 34.643,-77.0538 34.6673,-76.7413 34.7099)))&quot;</value>
                                <value>35.5</value>
                                <value>-80.0</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                      <worksheet name='Sales in the South'>
                        <filter class='categorical' column='[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[Action (Country/Region,State)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action1_0BDFB529D4DB43FBAE3092CC7B4D8BA8]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[Country/Region]' member='&quot;United States&quot;' />
                            <groupfilter function='member' level='[State]' member='&quot;North Carolina&quot;' />
                          </groupfilter>
                        </filter>
                        <filter class='categorical' column='[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[yr:Order Date:ok]'>
                          <groupfilter function='member' level='[yr:Order Date:ok]' member='2020' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Profit in North Carolina, 2021' captured-sheet='Regional Sales and Profit' id='8'>
                    <capturedDeltas>
                      <worksheet name='Profit map'>
                        <filter class='categorical' column='[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[yr:Order Date:ok]'>
                          <groupfilter function='member' level='[yr:Order Date:ok]' member='2021' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[Latitude (generated)]' field-type='quantitative' max='5271152.672973874' min='2807228.7055600821' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[Longitude (generated)]' field-type='quantitative' max='-6429871.4933885755' min='-12589681.320134737' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[Longitude (generated)]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[Latitude (generated)]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[none:Country/Region:nk]</field>
                                  <field>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[none:State:nk]</field>
                                  <field>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[sum:Profit:qk]</field>
                                  <field>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[Geometry (generated)]</field>
                                  <field>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[Latitude (generated)]</field>
                                  <field>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[Longitude (generated)]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>&quot;United States&quot;</value>
                                <value>&quot;North Carolina&quot;</value>
                                <value>-5088.5333999999993</value>
                                <value>&quot;MULTIPOLYGON(((-75.7523 35.1943,-75.6814 35.2334,-75.5217 35.2695,-75.4687 35.5722,-75.4846 35.4044,-75.5277 35.2167,-75.5772 35.2348,-75.7508 35.1898,-75.7523 35.1943)),((-75.887 36.5508,-75.867 36.5508,-75.7725 36.2317,-75.6012 35.9079,-75.6671 35.9717,-75.698 36.0598,-75.7374 36.042,-75.7761 36.231,-75.7877 36.2286,-75.8438 36.4242,-75.8926 36.4731,-75.887 36.5508)),((-75.7098 35.9399,-75.614 35.8499,-75.6503 35.8252,-75.7098 35.9399)),((-78.5749 33.8803,-79.0712 34.2992,-79.45 34.621,-79.6753 34.8047,-79.9276 34.8066,-80.3204 34.814,-80.7975 34.8198,-80.782 34.9358,-80.935 35.1074,-81.0415 35.0447,-81.0572 35.0861,-81.0325 35.11,-81.0332 35.1487,-81.3281 35.1635,-81.7681 35.1805,-82.2162 35.196,-82.2749 35.2001,-82.3536 35.1908,-82.384 35.2105,-82.4176 35.2001,-82.4347 35.1683,-82.4596 35.1781,-82.5749 35.1455,-82.6131 35.1397,-82.7645 35.0682,-82.7848 35.0857,-83.1085 35.0007,-83.5494 34.9925,-83.62 34.9866,-84.3219 34.9884,-84.2902 35.2256,-84.2237 35.2691,-84.1991 35.2437,-84.0981 35.2472,-84.0291 35.2922,-84.0383 35.3478,-84.0074 35.3716,-84.0233 35.4115,-83.9611 35.4637,-83.9118 35.476,-83.8826 35.5172,-83.8256 35.5238,-83.7717 35.5621,-83.663 35.5691,-83.6019 35.5782,-83.582 35.5627,-83.4983 35.563,-83.4458 35.6118,-83.4216 35.6112,-83.335 35.6655,-83.3105 35.6545,-83.2542 35.6958,-83.2555 35.715,-83.1857 35.7299,-83.1592 35.7649,-83.1202 35.7662,-83.0787 35.7895,-82.9924 35.7738,-82.9616 35.7911,-82.9206 35.8685,-82.8966 35.8785,-82.9138 35.9245,-82.8985 35.9451,-82.8516 35.9496,-82.8204 35.9221,-82.7749 35.972,-82.7759 36.0008,-82.6364 36.0659,-82.6029 36.0398,-82.6109 35.9674,-82.5579 35.9539,-82.5054 35.9777,-82.4607 36.0078,-82.4167 36.0728,-82.3557 36.1153,-82.289 36.1357,-82.2452 36.131,-82.2221 36.1569,-82.1479 36.1495,-82.1288 36.1039,-82.0804 36.103,-82.0331 36.1204,-81.9182 36.287,-81.8655 36.3293,-81.7931 36.3625,-81.7649 36.3387,-81.7074 36.3352,-81.7286 36.3912,-81.7156 36.4575,-81.6949 36.4674,-81.7081 36.5357,-81.6775 36.5882,-81.3532 36.5747,-81.2919 36.5749,-80.838 36.5591,-80.7304 36.5623,-80.2951 36.544,-80.0535 36.5425,-79.5104 36.5408,-79.1379 36.5417,-78.457 36.5425,-78.3239 36.5438,-77.7671 36.5454,-77.2969 36.5448,-77.1645 36.5463,-76.916 36.5438,-76.9159 36.5521,-76.542 36.5507,-76.036 36.5506,-76.0398 36.5014,-75.9473 36.36,-75.9148 36.3517,-75.7986 36.0721,-75.9424 36.2848,-76.002 36.3238,-75.9243 36.1641,-76.0215 36.1901,-76.1284 36.2889,-76.1996 36.318,-76.2172 36.2968,-76.0773 36.193,-76.0615 36.1455,-76.1879 36.1255,-76.2863 36.2168,-76.2151 36.0969,-76.3734 36.1385,-76.3031 36.0993,-76.4915 36.0848,-76.4086 36.0681,-76.5136 36.0062,-76.6071 36.0564,-76.6777 36.0465,-76.7216 36.1503,-76.6723 36.3039,-76.7497 36.3402,-76.7009 36.2943,-76.7232 36.2438,-76.7556 36.152,-76.6825 35.9895,-76.6994 35.9268,-76.5575 35.9404,-76.401 35.982,-76.3675 35.9308,-76.272 35.9717,-76.0625 35.9906,-76.0464 35.6721,-76.1687 35.6987,-76.0441 35.6476,-76.0126 35.6691,-75.9827 35.772,-75.9857 35.8891,-75.8572 35.9455,-75.7833 35.934,-75.7288 35.8248,-75.7174 35.6931,-75.7796 35.6843,-75.7337 35.6294,-75.7827 35.5774,-75.8548 35.5846,-75.8921 35.6435,-75.883 35.5824,-75.9523 35.5329,-76.0274 35.4266,-76.113 35.3549,-76.2788 35.3431,-76.3919 35.4304,-76.47 35.3723,-76.5401 35.4093,-76.5796 35.5078,-76.4724 35.5111,-76.454 35.5523,-76.4724 35.5566,-76.6376 35.5134,-76.5755 35.3882,-76.6693 35.4335,-76.769 35.4276,-77.0358 35.4928,-76.9681 35.433,-76.9254 35.4487,-76.6254 35.3421,-76.6095 35.3283,-76.5011 35.3148,-76.4679 35.2612,-76.5742 35.2405,-76.5426 35.148,-76.6092 35.0673,-76.8053 34.9669,-76.9428 35.0485,-76.9389 35.09,-76.9985 35.0768,-77.0309 35.1344,-77.0569 35.0935,-77.0406 35.0996,-76.935 34.9721,-76.7607 34.9153,-76.6847 34.9558,-76.6762 34.9699,-76.5172 35.0034,-76.4947 34.9633,-76.3788 34.933,-76.3174 34.9691,-76.3344 35.0263,-76.2766 34.9598,-76.2972 34.9237,-76.3337 34.9211,-76.4011 34.8864,-76.5197 34.7187,-76.5752 34.7219,-76.608 34.8071,-76.6273 34.7232,-76.6828 34.7787,-76.7668 34.7549,-76.7107 34.7197,-76.9019 34.7291,-77.0292 34.6825,-77.0909 34.6852,-77.1564 34.7654,-77.1187 34.6894,-77.3168 34.5465,-77.4025 34.5928,-77.3387 34.6402,-77.4329 34.7377,-77.3725 34.6267,-77.4459 34.6138,-77.372 34.5183,-77.5357 34.4596,-77.7552 34.3064,-77.8606 34.1494,-77.937 33.928,-77.9615 33.8403,-78.0047 33.8592,-77.9381 33.9322,-77.9164 34.0091,-77.9543 34.2253,-77.9697 34.1671,-77.9398 34.058,-78.0231 33.9158,-78.0191 33.887,-78.1716 33.9282,-78.3878 33.9059,-78.5594 33.8669,-78.5749 33.8803)),((-75.7811 35.1892,-75.9941 35.0777,-75.9896 35.1148,-75.7811 35.1892)),((-76.0134 36.5506,-75.9838 36.5506,-75.909 36.5507,-75.9221 36.4827,-75.9894 36.4947,-76.0134 36.5506)),((-76.3416 34.8308,-76.4958 34.6607,-76.4404 34.748,-76.3416 34.8308)),((-76.4639 35.076,-76.4334 34.9635,-76.4865 34.9663,-76.4639 35.076)),((-76.7413 34.7099,-77.0963 34.643,-77.0538 34.6673,-76.7413 34.7099)))&quot;</value>
                                <value>35.5</value>
                                <value>-80.0</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                      <worksheet name='Sales in the South'>
                        <filter class='categorical' column='[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[Action (Country/Region,State)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action1_0BDFB529D4DB43FBAE3092CC7B4D8BA8]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[Country/Region]' member='&quot;United States&quot;' />
                            <groupfilter function='member' level='[State]' member='&quot;North Carolina&quot;' />
                          </groupfilter>
                        </filter>
                        <filter class='categorical' column='[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[yr:Order Date:ok]'>
                          <groupfilter function='member' level='[yr:Order Date:ok]' member='2021' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Where are we losing machine profits in North &#10;Carolina?' captured-sheet='Negative Profit Bar Chart' id='9'>
                    <capturedDeltas>
                      <worksheet name='Negative Profit Bar Chart'>
                        <filter class='categorical' column='[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[yr:Order Date:ok]'>
                          <groupfilter function='member' level='[yr:Order Date:ok]' member='2021' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                        <annotations>
                          <annotation class='point' delta-type='added' id='0' mark-position='1' pullback='12' text-width='180'>
                            <formatted-text>
                              <run fontalignment='0' fontcolor='#000000' fontname='Benton Sans Book'>Machines in Burlington lost nearly $4,000 in 2021.</run>
                            </formatted-text>
                            <point>
                              <visual-coordinate class='mark'>
                                <tuple-reference>
                                  <tuple-descriptor>
                                    <pane-descriptor>
                                      <x-fields>
                                        <field>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[sum:Profit:qk]</field>
                                      </x-fields>
                                      <y-fields>
                                        <field>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[none:Country/Region:nk]</field>
                                        <field>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[none:State:nk]</field>
                                        <field>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[none:City:nk]</field>
                                        <field>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[none:Sub-Category:nk]</field>
                                      </y-fields>
                                    </pane-descriptor>
                                    <columns>
                                      <field>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[none:City:nk]</field>
                                      <field>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[none:Country/Region:nk]</field>
                                      <field>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[none:State:nk]</field>
                                      <field>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[none:Sub-Category:nk]</field>
                                      <field>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[sum:Profit:qk]</field>
                                    </columns>
                                  </tuple-descriptor>
                                  <tuple>
                                    <value>&quot;Burlington&quot;</value>
                                    <value>&quot;United States&quot;</value>
                                    <value>&quot;North Carolina&quot;</value>
                                    <value>&quot;Machines&quot;</value>
                                    <value>-3839.9903999999988</value>
                                  </tuple>
                                </tuple-reference>
                              </visual-coordinate>
                            </point>
                            <body x='97' y='-183' />
                          </annotation>
                        </annotations>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[sum:Profit:qk]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[none:Country/Region:nk]</field>
                                    <field>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[none:State:nk]</field>
                                    <field>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[none:City:nk]</field>
                                    <field>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[none:Sub-Category:nk]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[none:City:nk]</field>
                                  <field>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[none:Country/Region:nk]</field>
                                  <field>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[none:State:nk]</field>
                                  <field>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[none:Sub-Category:nk]</field>
                                  <field>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[sum:Profit:qk]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>&quot;Burlington&quot;</value>
                                <value>&quot;United States&quot;</value>
                                <value>&quot;North Carolina&quot;</value>
                                <value>&quot;Machines&quot;</value>
                                <value>-3839.9903999999988</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone flipboard-zone-id='5' h='18672' hidden='true' id='6' story-point-id='8' type-v2='text' w='33268' x='3051' y='29046'>
          <formatted-text>
            <run fontalignment='0' fontcolor='#000000' fontname='Benton Sans Book'>&quot;Introducing machines to the North Carolina market in 2021 resulted in losing a significant amount of money.</run>
          </formatted-text>
        </zone>
      </zones>
      <simple-id uuid='{628FBBF3-9354-4E34-8B57-3E398EEEE886}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='Regional Sales and Profit'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='Orders+ (Sample - Superstore)' name='federated.1vrhlw30lqg3h11cnvldo19i9w8e' />
      </datasources>
      <datasource-dependencies datasource='federated.1vrhlw30lqg3h11cnvldo19i9w8e'>
        <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
        <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='13' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='10' param='horz' type-v2='layout-flow' w='82400' x='800' y='1000'>
              <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='82400' x='800' y='1000'>
                <zone h='98000' id='5' type-v2='layout-basic' w='82400' x='800' y='1000'>
                  <zone h='49000' id='3' name='Sales in the South' w='82400' x='800' y='50000'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='49000' id='11' name='Profit map' w='82400' x='800' y='1000'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='12' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='10125' id='15' name='Profit map' pane-specification-id='1' param='[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[sum:Profit:qk]' type-v2='color' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='21875' id='14' mode='slider' name='Profit map' param='[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[yr:Order Date:ok]' type-v2='filter' w='16800' x='77300' y='22625' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='750' minheight='750' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='21' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='20' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone h='21875' id='14' mode='slider' name='Profit map' param='[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[yr:Order Date:ok]' type-v2='filter' w='16800' x='77300' y='22625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='11' is-fixed='true' name='Profit map' w='82400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10125' id='15' name='Profit map' pane-specification-id='1' param='[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[sum:Profit:qk]' type-v2='color' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='Sales in the South' w='82400' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{693EA045-803F-4337-B230-358E089AB98D}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='75'>
    <window class='worksheet' name='Sales by Product/Region'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[none:Category:nk]</field>
            <field>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[none:Region:nk]</field>
            <field>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[none:Sub-Category:nk]</field>
            <field>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9D755DB9-E997-4FA3-8B59-9813781A297C}' />
    </window>
    <window class='worksheet' name='Sales in the South'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[none:Sub-Category:nk]' type='filter' />
            <card param='[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[yr:Order Date:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[none:Category:nk]</field>
            <field>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[none:Region:nk]</field>
            <field>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[none:Sub-Category:nk]</field>
            <field>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{04A6343D-5FEE-4A16-9FCB-0860AFE324B0}' />
    </window>
    <window class='worksheet' name='Profit map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[yr:Order Date:ok]' type='filter' />
            <card pane-specification-id='1' param='[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[none:Country/Region:nk]</field>
            <field>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[none:Region:nk]</field>
            <field>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[sum:Profit:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{EED3864C-A023-4806-9A1A-62DF88DFE2CB}' />
    </window>
    <window class='worksheet' name='Negative Profit Bar Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[yr:Order Date:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[none:City:nk]</field>
            <field>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[none:Country/Region:nk]</field>
            <field>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[none:Postal Code:ok]</field>
            <field>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[none:Region:nk]</field>
            <field>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[none:Sub-Category:nk]</field>
            <field>[federated.1vrhlw30lqg3h11cnvldo19i9w8e].[sum:Profit:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{CB0B980A-0AD6-44B9-B1E7-E0C21C3363BA}' />
    </window>
    <window class='dashboard' name='Regional Sales and Profit'>
      <viewpoints>
        <viewpoint name='Profit map'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sales in the South'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{7B5A4BDC-153E-4C91-83F9-C437CB4DC839}' />
    </window>
    <window class='dashboard' maximized='true' name='Improve Profits in the South'>
      <viewpoints />
      <active id='4' />
      <simple-id uuid='{F8C4D3F0-CF8C-455D-92F2-E190AC65BB6B}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Improve Profits in the South' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Negative Profit Bar Chart' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nO29Z3cbSbam+6SB997Re09J5brnjDkzP2B+xf2FM+vOt3PPOb3OdHcZGVIk
      BZEACZAESBDem3T3AymVqqUqSSUVIYn5rMVFmMzIiETujL3fjNghGIZhYGJyRxHHXQETk3Fi
      GsAdp9frjbsKY8U0gDvOaDQadxXGimkAJnca0wBM7jSmAZjcaUwDMLnTyC9e9Hq9Ox8Q3UW6
      3S4AhmEgCMJHLftzKFMwH4SNj4v8MY5ICr/T9lHLrVZrhELBd9q20Wjg8/nQNA1Zlt++w3ug
      quonX+ZrLlCrfEVroIA24vyi/IvvBp063aFOoVDg16wmkzn8zQO2yxc8erLDs+fH1AonlHvK
      G7cbdJp0h+r1G3XI4cnp21vzFvrNCtX24I3ftS5PKbXe/N3bGHQadIcaR5kjGDU4ypXfuo+h
      q5QqJfK5czAMCrkMO3tphoMOT3d3OLusUjo/YefpPv2RRj6TZnc/jaIM2d/d4fD4FG3UZ293
      h0yuwKhTIXuSJ1+soCgKmtJn/+kuJ+eX9FpVdnZ2KF7Vf1f7vmReM6V2tYxg8+AVNYpXFUat
      Ep2hhtMXIeHW6OlWfvr798xv3mc67OQoVyCcnCbqEniWOaXcaLGwsPSrB2zXmkyvrhGyWaie
      pFE1g9zRM+rtPnMrm7TKp5QrbeZno2iCi9Zllqtag77oolzMU7iqEU3NkYz43rux/VaNusVK
      +/KEenvA/OoGrcsTyu0hMZcV3aZxnMkS9Ls4Ob8kFJvALQ44vSgTjE1iURpc1XtIdhd+h0Qs
      NU25cIrDbkXwuhkMBmBoDIYqlYtTTi8qpGaXiAXcr9Vl0KrgCM7Qa1wy7DeodgU2VhdJ7+0y
      t7qFXdJ5+NMxW2vTPM+e0ykXWdz4CnHU5LKp8M18hKPnaaaXt7g8ekrFkDmtWvmvDyY52D9g
      UL8gOLnMZeYAsW8Fu5eQ//V63HXeGgR3hzpbW9v0WhVGnTpDXKSmplhbmiV9mGFyepqzkwzZ
      k1M2trdJhP1vKVElvbdH+iiHAWijLq2hyP37m2TSB5zlcixvbKD3WnQHfUpNha3NdZxWCZvd
      jiQaHGdzH9BkA7vDjq50OT3LcdU0uL+1icMqsPvjX7H6o3TbDUSLg1DAS754xfb2PSrFPK3e
      gOW1DcRhD7ukcFZuclVvoXeb9BT9lWPoHGVPmZ6e5vgo/cZanJ4VGfZqDJp1yl0NMDAMA1ES
      MAwdwzCoXRU4yl3i97l48PW3lLIHlEcOvru/xN6TR6g66IaOfuMXT05PI4nXP6mhjcgepkG0
      EpleYjrs5NHuwQecty+T1wzA5bXTqDVptxrY7I6XAcergYeAgabpyOg0Wh0i0RgYOkNFodfr
      v+WQMisbG6wsziAAgigxGg0Y9NqIFgeeYASX7aZjEgTU4RBl2Geo6DzP5llcmMMqvb94paoq
      zXYHp0Xh9LLP7GQSQZTQ1QGKMkLVYGl5ictikUB0grnJCHt7B6BrjBQF9dXrWxDwJ2eoZB7h
      9MXecDQBdIV2p0MslnhjfXyRJFvr6/zpn75DwkLEI5I+PGF+cYn8UZqrepcHD+5jIOBxO7kq
      niG4QwScEqf5U6KpGVbXVilknmHxxQmH4wRdEgCxWIyp5S2CThmHx4Pe73BWLDE7O/Pe5+1L
      57Ug2DB0Cvlj2kOBhYVZOq0mgUCAer2O02KgWoMY3TJn1S4LExGOMsf4YxNEvDYymRyuQJCp
      ZPxXD9hrNhHdHuySyKDdQLd7GDauKFY7LC3O02k1CASCDLtNVNmN0r7istYlFI4gq12uWgOC
      /gCRcOC9Glo8zTLAyexknEIugyLYCIRCSEqX01KD6VQMweZi0Kxgsds5Oz0nMTWHS1bJHJ8x
      MbsAag+3x0+72cAbCFA6zROcmMLottDtboadFgGvg3pHxy6NyJ6cEZ+cJfwJux53PQg2VaAx
      8i4q0GUhjzcySb/deGdl53246wbwcWtn8s5cq0BXCF0D//IUB+k0I0VjYWWD8tkhnf6I6MQC
      /V4Hl26gKAr9dp2jkzO8oRg+q8bFVR3D4mBtYYrDdBpsXpIBO8dnF6RmFjC6FYqVJjPzK/hc
      1nE3+ZPkNWfaMAxUVUXTrgMxXddf20nX9V+VQU3ejUGrjD0whTZoousqA8PC5voy2aMjWr0B
      6xubFPPZl9uXy2Vkqw2LJJJOp2k2G0Qn57D0O+TzWVzRaRZmUhxmT1heWSafPaJQKOIPxXDZ
      zfvcr/GaAZTOMuzuPePg2XO6zUv+7T8e0+kNGPQ6VOtNdE3l//7bv3NVa2AYOs16jaGioasK
      1WqVkaqNox2fHaenFyiDBkq7yVVHQRRFNGWIIFsRBBF0DYRf/jyZg2ck5xYJel2AiNUiIwoC
      giSh6zq6rtPvNDk6yuDy+lnZvIdVbfIscz6eRn4GvHZrEABV05lfnEUcVVBVBVXT6XUa9LpN
      qvUgmqoyUlQK2We0cNI5PsNv0ZH9IZBspt78DvijSWLxOIYyzWWlS/XynENDZ2VlmYd//f/Y
      f3bI/NIy+qCFVRaIxWI4LXCSzRKMRPH7XNhkkVA8jjsS5PTwkHzfy737Dzg5LeLxeGnXy1Ra
      I2YWZsfd3E+WN6hABqNhn52HP7GyvcHzTI1vtqZ49PAJokXAkIIwqLP59dfs/P0viC4/7e6I
      r1anSWfz+CMp5qfeLP2Z/AraiPxljenUtXp2eppnamr6Vg5914Pg11ygWumMZ+kjBKsLm92N
      0StRuKpfP6QRZaxWGb/Hxt6zDLMz06iqRjAYoNvrIcsymma6QO9KMZel0R2CZH158VdLJRK3
      dPGbmDLo2DB0lZ3HPyHYw2yvTHNaKNDqjrhM7+FbWuPe8hIW+Y8frW72ACZjod8qY/NPot6o
      QM8zORbm50ikplhbX7mVi9/EfA4wNs5OL9AtDrRei6uOQiw5gd0qI0mgqTqGJHz0sfQmr2Ma
      wJjwx1LEYjEMdYpSdUg8EgJgZnmew/Qhq6tLWCTTAP5ozBjgjmPGACZjoXZ5zpPdXQ6eZ9F0
      jVrtzZNVqpcFmj1zquofhekCjYnGVZ3FrU0qT3+g1J1CHCpULs4o1VsIspPVxWmODva4LFVZ
      /SZE9vkePd3K6vIsheMcHV3Ga1GodUYsLa/isErjbtJnidkDjAldHbC/s8PR1YCQE8rlGvVq
      g6mFZeRRm8uTQ6yJBRZmJ9DbBSpDNyGrwnmlwWHmnKX5aS4uLwlH41hNxeh3Y565MSHKdta3
      73Fv1k++8iI/p4gsS4iCgGEYGLrBaDgEQeLq4pR6X8Ntt5BIpbBIIhvbDxhUzzgtNcbals8Z
      0wUaE/6In6PdXSwWJ8szbhpiBEkwsAgQisXxBAIcH6bRBBvR0AT3Fkc0Bzouu4N4IgJAo1Ki
      j5PF8PvPjza5xlSB7jimCmQyFmoXZ9cqUDqL9hv3oOOT41us1d3DdIHGRKPc+FkF6kwzuDik
      1ddZ3Vincpal3Ogwt7xBt9tl1K1T7gpIozqlSpPZhQVOj4+RnD4WJ0IcpDO4AlEmQk6eZU4I
      xafwyiNOzq9ITM0SC3rH3dxPFrMHGBOvqkButUofLxvLCfZ2Dih3FLY21zh6tk+nUeaH3Qwx
      v5Virc/W1hZOmwWbVebw6JB+u05HlYhGgqSfHzKzsMTF6TGVUgmbx4/f4xx3Uz9pTAMYEz+r
      QD7ytSGqOkIZDpEtVjRVQ1NHIMm4/WF8Vp32UANdR9NVCpk0jugM0aAPhy/K5tIUO092MNQh
      +fwpDo+f1NwScZ+Vp/vPx93UTxozCB4TtctzTq9qWKwOlpfmuTo7od7TWV5eoHF1zkWlzeLy
      Mp1mnVDAy/llDbdVp1BqMD0zSf4kj8XpYS4V5ih7gicYIxZwcHR0gisQJeQSyJ1fkZqeI+j9
      9V7grgfBpgHcce66AZhB8JjQNYXs0SEj0UHCpSOEFgjYf7mNoanU212CflPn/6MwDWBMnKT3
      cScXCbksVPN7nJT2cTusrC9MkH52hGFzsb4wyWCoULwo0m9U8YTjXBSLeIJR5ibNedcfAzMI
      HhO1vkI84MJqtSKIEnOLKwjaAAQJu91C7iiDoqlU6k2uCic4wlPISoehIRMLf/wMcXcV0wDG
      RNAhc1HrMBwOQRAQRQkEgerZIXgnSIX9vEhJJtm9JMJePKEEq/MTPHmyM9a6f0mYLtCYmF3d
      5CRzRKZiYyaWRLCCGE/gczsoHx3jDseQJQvJaBiM60VEDF3lLH/GzPzCmGv/5WCqQHecu64C
      mS7QmKgWT3myu8vRydmv5lm9uLi41TrdRUwXaEw0K00Wt7ZwAY3KBflCiWBsCofR4fyqRmpy
      mr//7a8srW0xNxEhfXhCMD6BQ+9x1WgjWJysLqTY2z3A5g0xG7FzXGpjc7gYNq5QBTur60uY
      88R+G7MHGBO6OmB/d5dsvojN5kASRY4yR1QqZVzeID6vl9TUFOsrizx7lmZ2cYGrsxMqtRZz
      a2vISofjg33cE3MMmiUa9QpXXYGZuIdyrUMsEUM0ndu3YhrAmBBlO+tbW8xPJ3mWPmRhcRGn
      3cLU/Aohp8H+sxwSoGg6oqFSKFzg9gUQEBBFEUEQkGWRi/NzJJsbqyyQTKUQBBv3HmxRONqj
      OXw9tb3JLzFdoDERSiZ5sWTF3Owkx7kzJlIplH6bQrnD/PwCkuLj8OiYta0HHGWyOP1RvA4Z
      CxCNJ3H7fShHz9EtTpx+L2FRBgHKF+c4I5N4beb97W2YKtAdx1SBTMbCu6hAr1Kr1n7xPp/J
      crOMOMNek05ffX0nk7diukBj4lUVqFAskkomOc2f4rFJXDWb+INBTk8ukCwiqxsbDAYDuo0K
      R7lzgrEUzeoV9X4XlydEym9DsWg8e/oURYPo1CIuumROL7G7fSS8FnLFMvHJOeIhc3bYq5g9
      wJh4VQWqVqsAXJWuaJaLGK4oUY+I1ZtgLual3OxRrVZpNSogOwgHfVjsLtY2Nhm0K4w6TToD
      hZEhs7m9Rvn8nGz+gu3tLZReh1qlgtXtI/Ab8wLuKqYBjIlXVSAMA0UZ0RsMkSx24tEwAiCK
      AoIAL3ykQGyK+ckIOzt7CMKL7NE/J9AVBfHmcwMMDVVVGYxGxGcWSAYc5uywN2C6QGMinPpZ
      BZqfSvL86JjJmRkCHjsWCZA8JKMGDosDUbThSiVBVzg9K7CwuIisj5CAZDKFwyYjyzacyQQg
      kUjGcVgMDg8zaAbooz5nxQoLC+YYon/EVIG+UC7PTyhVGoTiM0zEA7+6nakCmYyFeumKN+V8
      zmSyb/gUzo+yDN6j/PjELNv37v/mxW9iukBjo14qYY1FsQKn2TTVZp/51Q0uz07otBskppex
      qg1OzstMzC4y7PfQlD67+2lkl5+1RXPp04+B2QN8AjicTkS1Q+bsCm8oxva9e5znjnieyTM/
      P8tJ5jp4VQZt2gOdeCw65hp/OZgGMHZUTs7KLMxOAtfrNCvDLohW9NGAcqVKKBIDQLL72N5Y
      4vnuLso4q/wFYbpAYyIYC5LZ3SUYTZKMeCm1DSajfoaNHofHRdbWlmGYJJs7J5qKYPc4sQkC
      +fMzEjNz5g/3kTBVoDuOqQKZjIXK+Qn50vX4nqvzY3LFyps3VDtkTi5fvv3HMUEmH4bZk46J
      VrVFSegyFQ1yel5Acg9x0qV4VSM2MY9H7HOYvyCZCHOSydJuXDC3vEG/36dXv2T/5BJRsvBg
      c5n0/j5D0c7m0hT7+2lkV4C1xZlxN/GzwDSAcSGI+OwizXYVyX6t1TscDiTR4Dibw2FRuX//
      PoLa4mpilqWUg7NShUG7hlN0EptawihkKZTP6IseAtoVmUsvnb7Gymx4zI37fDBdoDGSSET4
      8W87TN8oQOlMjsXFeSyigCwYDFWN4Ui9Hu3z6qrxws//JVmmWa+i2XyEvR42N5bZ33t62035
      bDF7gDERTqVweAKsrC7iczmYSiZA8ZAvVJiZSRH02nj+PE1qaopUIojFJhMN62heG06HjEW0
      QiqFNehnMTWgPRJwOyycHmeZmp0fd/M+G0wV6I5z11UgswcYE5VCnrNqE5vdzeri7M3QZpPb
      xjSAMdGqtlja3OTq6UNK7TBXJycIVhfLM2GePj3GkCS272+Sf75PayCwtblIPpenPYR760vj
      rv4XgxkEjwldHbD/9CmXXQO/3YrdZiGXz6GMBvgik2zP+3l6kKHSMZjw6xwclzkplNlYXRx3
      1b8ozB5gTFzPCNvEBRSPdnFE5wnWmoCBrmvU62083iBn5RLdYJy43wZ6Alk0XaWPiWkAYyIy
      MfFyRlh0epHDo2OSk9MIQDF/jLwww8JkAq+kUG4OSE54ka22cVb5i8RUgT4xRv0WzZ5AJOS5
      leOZKpDJWKic5zirtbDa3EyHrTSFEKmgA6vDS8Qx7trdHUwDGBOtWvtGBXrEVdvN8fklFy47
      97dXODrYpzcS2NhcZm/3KSIwubzFoJynVG8zv7JB5fSQdl9jZWsbu5kC+ndjqkBj4mcVSMdn
      k5lbWiUqw2WlgOBNsb0a5eDgFMkV4N6DBYpHeY6LVaankhw+O6BRb+OPRLGav+AHYfYAY+JV
      FahdOuY6w4+AZLEyqHXpNBVsLjuKOroeBySIaMM+3d6AWCKB3+2gcZYmZw8wF7a/7XAmv4Jp
      AGMiMjHBC03H7o0QxoZoSWLx+6Cbp9S1sjyboNHpAzYmpmJMT3nIF8pMzyfo1S7oWkIshUxl
      6EMwVaA7jqkCmYyFbqNC9rSI3e1nJualMZSJBt3jrtadwzSAMfHsMMPmg28QdI3i4WP2L0b8
      6duvqJwf0h2JrKyvUzo7otFWmUwEKFxc4Y9OkvBJPH2eQ5LtrC6m2Ds4whOMsTgzgTme7v0x
      NYQxsba8yNPHD3l+fE4kFmd2YRmfUGVgT7G1lOAwWyCfP2d9cx273YYoSuROsqSPcty7fx87
      Kvv7B8Qmpqhd5Blqpif7ezANYEwMNbj34Gu6jRJIMpoyQpDtDDtNup0uVruVYCSGVRJIH56w
      tDiP1SIiCTqDkUKn28dhk2m0OgQjMWTz7v+7MA1gTFhEg/TBPnNL6zj9cVy0aWpuZiNWLtsC
      y9MxJicmAFhemOb47JL5uTmWV9c4zRwy0mFhfRub2sPqcCOZg+R+F6YK9JnRrF6SPy/hDsaY
      m4x/cHmmCmQyFrqNMpl8Ebs7wNLc1DsFsJnDI2YXZ5gQnASD5lJHHwPTAMbEs8Msmw++QTR0
      WuVTBN8U1eIJ8ZCbvefnCKLIve0VdneeggGzq1sMh0PAoNftoQ3qnJeqJKYWUZpFqq0+s4vr
      +FyWcTfts8I0gDGxtnKtAlk9IaLWLqJrimqtSsgjE0rOkpTLZC7ayK4AW8vT7DxN3wS6Oo1G
      k1azxPzSMtmj53jtBk5PBKc5Ku69MYPgMVGv1/F4/bQbdSxWG/lMmsJlBQyd8/wJ+/k6yYCN
      aqnIwdNdfJHUK3sLOCSDg4NnOL0BAv4AzfIZp5eNsbXnc8UMgseErmkMRyMsVhuSCMPhCFGS
      GbUuOG9ZmZsIYWHE4+enrC3OYbNa0HUdURSv/wswGI6wWm1gaIxUHbvN9t4Pw8wg2GQsiJKE
      w/HzzBe7/XpEp273MelyYrXIGJrBzEQSu+168qQkSb/4//P+Ig7zl/xdmC7QmDg+3Of//L//
      hyd7abRXOuHyWR5FvL6a1WGPKzMb9B+Ked8YE3NL69SbfTY3VujXy2RPC6iCjbA4JL2/y6g/
      5E/3rvP/pJ8+oq/ouEMT9Ct5dNnB/NIKHof1LUcxeRtmD/AJ0Ot2MBCpV2uIso2V9S0SDgud
      m56heFFEkmXKpRJerxdNVdF1M3T7GJgG8AlQbzSw2ayIgoBhaOQyzymPNNw3EW0sFsditTM5
      mUSUZWyyQb3ZGXOtvwxuTQXSdR1TcPolmqYhSRKGrjNSVGRZQhBAUVRkiwVJENANAwEYKQoW
      ixXD0FA1HavVyscY/dNsNvF6vei6/jK4/lh8DirQrRlAv99HVdXbOJTJe9DpdHC5XH+IAbww
      8E+5zFsLgl+V/N6HbqeD0+3+KHe7t6EMOuiyG9utnBWDnb//O+7pLeYTwY9acrVaIxR6tzI1
      TcPj8ZjPAW6Li8MD0k2Ff/5mnceP9rh/f5vRcIhksSIKBoZhoGk6Dx894sGDB+SOT5hfXkSW
      rcjS7w9ZTp8+4cIQ0VsN5re+JeSyIIkCqg4CBrqm0b7M0g9uYx2WCYWCaJqObhhYLVY0TUFV
      NSwWmR9//Il79x9gs1oYDodYrFYEw0DTNAxBxGp5+2nVlD6SN077qoge9fDk4UMEm4dk2En+
      sk4sMUG9kEEzRKJza1wePkF2h1ibi/G3xxlisRgJr0j6vAq6wdqkh7+mqywtLtBvlrEYPfaz
      lwiyhZmQjdPagERigsmEuXzSq9y6ARiGSMQjUmr00TWdwnGa2gB6vT4zAYGnRYXluQkq5TJX
      1Qb9doNcLkenr/L1vY3ff1xdIBgN01f6CBgcpNNszkR4lO+jVzIIrghz10t1cXF5iUOp8sOZ
      gkPrsLm9xt5uGrc8wJ5Yp1wuUyrXUNtXDLDQ6ysEBIW2w0W/0ea7775BekuXVSvkuKp16Dfr
      zM9GcAamWFlM8mTnCV9/9QARhWcPKySnElwVy/h8HtpDDV124LaLaJrGyWWT775+wNnzfRq9
      AZML68xNeHlaL3GRP0W0umlfVZFnVhEqBTRd/93n70tlLCpQfGqey3wWA6h0hmytr+KxiYx0
      WNt+wNREklg8wWQiisPjZ2l5BZv04T+eJMm4nHb6g+EvPre7g3z7YAvp1atWEJiZXyIVDtCu
      FgnNbTIzkUCyO0nEE0xPxOkMddZXV7FLKjpWFldWCHhsvEtUddEc8c//+Vv++7eLnFahUz9j
      /9kRsYCbJ7t7FEotYvEwssXFRCqCKFkwlB6tTh+H002nVSMR9PBw5ynFRg+v3YrN/nOKlGgq
      iYRAYmoC0QCX00GtWv3gc/ilces9gCiKiJKFZMDB45MG92Ihfnz0GAOJiFWEG//OYozI5IuI
      //D4/3cfV4LLy0uEdouJmEy/WeXpswY4J7HejKERhGsVRpIkBFFEFAQEScIeiHKy85iG0SG4
      MolN0khnTwl4bDx6/BgkBx7LtVrzrvXc2NxCBJzhWVZCBsJUGFXXscgy4YSCKMkkIt+hqhqy
      xULYt4JugCxLBH1eBFFCEkVCCQVRlBFF8N5ESuvrawiCwHZIQRAkJEnA7Q0iy+ZQ6X/EHAz3
      Duj6kPPTK1rVC+Ir9wnf4pj70WiIJFv/sCmPd30wnPkg7B0QBCs+n4vJpXVCzo918Rvs/O1f
      yRR/e6xPIZ+hN9KpmmOC/hDMsUDvgCAI+AIfV6rURn0kf4JOuYARdfBv//E9Prcdf3yRcm4X
      h8cHVj+em1/o4uICu6yTyRUYGRJRl0GppTHqj7i/Pc/Tg2O8wQg2tUmzr2HzhKBbRkFman6F
      oMfMH/ombr8HMHROjtLsPTtkpL49sD3JZtE0lXqjeQuVuz1qxRxX1RaF8yKKbhCKT/Dg6+/o
      1As4fSG2th8gKD8PdzAMg16ng8H1ZBpDsLCytk7c6+DsosTSxjZrizMUihfIskStUiYQ8KNq
      Grpmqj+/xq33AMXj5xjuGCsRD6h9nh5kEW1ullJeTi6biFYXDr1DudFldnGFXq8HxnUunPPc
      EY32AJs7wETIyeHJGW5/hPnp5G0344N5oQINy8dkzhtULs7YHTTwxRYoZh6xv7eL5PABPxtB
      q9lElC2I/zDrJRaPcHiwRzAcIR6PMzRkJiaiGHoXu1Wi1mgQ9jtvuYWfB7duAOVWl9VpP7Is
      ogvgsMnk80fEvYucN1T+edvN42dN7m8s82TvCJsEhqZSbTRh2GVlbZv9gz3kZBCrLJLNZJid
      Tn52wcwLFcgRnmXF12fUT7K2vIAkiTTLQZaW15BlCQwDBOFG2QFV09lYFa/1HkHAvbGOIIp8
      /SAACIjiBKqqIkkyYBDV9OtyTN7IrV83UZ+L/GUNRRlxfpTGHpkiFvZiGJBKpRAFEV1VUJUR
      iL+0T0EQEUUBAXh+cMDk/BJ+l4PPUcYSxZtTLwiIFjuLs1M3g+EE5ucXsVhkBEFAEEUEQUAU
      RQRBxCLL169f/ZzrZxySdL2/xWJBFK+/e1GOyZu5dQNIzC5jH9V5nskRmZqlWczhCiZweUNE
      vTaQncxPBDg8LrC6skAimUCULSQiYeKJJAKQTCaZm58jlz0mlkrdyjihj4/Bk7/9K5liFQQR
      l/N6rNTRzlNEl2vMdbs7mM8BxoQ26pHOnqEMR2xvLPCvf/kPfOEJ6tln+JbWuLe8hEX+4+9P
      5nMAk7FQLea4qrUoFK5VIE8wyVdbqyRSU6ytr9zKxW9iGsDYuGyO+G//9A3/49tFMmeNl+N4
      vD4bz/aeo5jS5a1gukBj4kWOHwwD3bhZB08QMAzj5Xe3EbyaLpDJWPiFCiQKLy92QRBeqjkA
      ymiIavYGfxjmUIgxkXv6hLIhojSbbHz7Z9Rum2Aw8Np2lcIpcniSiDmU4Q/BNIAxoekCk7PT
      XKX30Qyd4nmJWiFHy5DodwZ8dW+RhztHqP0Oa8Eo//cvPyJZLKzeW+eHf/kL0fkV1NYFkt3L
      0soaztuZx/nFYbpAY8LQVWqVKpLViqKoGIAhWFnd2CTmc1A8Pmf5q29Ymp1ErZ9TVWRkY0i1
      0SOYmGZ7dZ5QMICqqqaL9AGYBjAuDJ1et0u71eZNOa5CyTAHPz0kmy8g+5OEbQZWd4CQz4nN
      ep0RTjdA0BXa3cEtV/7LwVSBxoRhGDd5koRfyegsgKFjvPzeuBkW9HOw/KIMQRB/9xKpd10F
      Mh3HMSEIwttlTkFEMDT6Qw2H3fraRf5OZXwg2mhII5f5ffuaeYFMfo2T3Z+oWIJ8szrHwaO/
      0rdH+Wpt4fUN1Q6Zkyabq1MA1Ko1gu+Y8+dj0L4453/9P//z1o5325gGMCYMbDRqzrkAAAve
      SURBVBhqB9XQ6Y8MRKvCVTFPsVTB4o7gMlrUuirJRJiLs2OGrXOiM+u0SkWEQYUn+TbCoM83
      f95i59EehgFrG4vs72UIxhKsLc6Mu4mfBaYBjJGo38XZ8SGu6DT9Xpt2q40giTSqdUZ2uH//
      HoLSpDw5x+KEk7NKDwMDRIn5pVWMYpZq7ZKuKhKQu9QHFtxOC4qijLtpnw2mCjRGwokET/dP
      mI5fL3naardePhUOOGUeP96hVGv/ZhmuYAyPFSzuMAEHiJKFZtNcK+xdMVWgMWHczPR6pyxa
      v4UAb5oR9K7B8dtUIKXX5eLx339X1XRNe5nX6WPxscs0DeATY9TvIdqcyCIYusZQUbHbbG/f
      8Xdy12VQ0wUaE8eH+/zv//W/X64R9kLTL+WzdNTr1+qgQ+784uV3//hn8uGYQfCYeH2NsCIj
      XSZqGZLe32PQ7fLnB6sAHOz8xEgXcASS9Ms5BJvbXCPsI2H2AJ8A7XYLA4Fmo3GzRtgmKZed
      7s1dvnRVQpJlmrUq4XAYVVFQ3yGnksnbMQ1gjLyIU9vtNghcrxGGxuH+LleKfrNGmEAinkA3
      BOLxGJquIaLS6vbHWvcvhS8+CFZVFd3Mi/+rtFotPB7PnV0j7IuPAUwD+G00TXt5jj72vfCP
      WBPuY5f5xRuA3X4zk+qFesKHDyLT1RHdoYbH9fvWPXtRn8d//Rdc0/dYSoWu5wMYBodPdpi8
      t43zFga6AYxGI5xO552VQb94A3hBr3HJo/QZXq+X1ZUlRr0WosWB3SrSH4xQNR2P240y7NMf
      aXg9LjqtJlaHG4tkoGoGmm5gEQ0alQtKAyvrc6nfXR9N6WENTdGrXGDEXPzLv/+FYGya+mmO
      jt3J9tIiFvnzTPn1OXFnDCCdPedPf/oWWYDaeZbTtoHSrrMyE+JvmTYRecj02jJH+4dE43Ea
      l3l6ooNWPcNSwsVfDxt8tb3MeSZDKOBAE1+fv/s+VAo5yrUevUaN1bV5/NFJHmyusN/vMLO2
      jLmWy+1wZ1QgEQP9xse9qHZYW5lnIuim0RuRmpolGQowaJVxReeYnZ6k0R+xMj+H32lloOos
      b9wj7lSxBKeYTCWRP3DFllJL5b/9p2/4H98tkz1rYL2Z5eXz29nbOUAxZc5b4YtXgV4w6lb5
      aTeLw+1mPuFn//gCURTZng9zOggQHJUhFOPs2S6SK0DCZyNXqiOIFpYTDhrWSSb9Eg+//x7Z
      KmEJTLE2mxh3sz6Yuz4U4s4YwKeMMuiCxYVlDFnM77oB3JkY4FOjW79k9/kpDrePuGOAENsk
      7Lx+GKbr+rVSZejUWl2Cfu/N3N8X312niTf5cEwDGBPPs2d88911UH5x9Ijs82cc9Nv8l2+3
      OHx+TKXV5T9/u0mhVKGQf06vqxGLBSk1ekSjceamPn/361PgzgTBnxrX+SCuESWZxZV1wgE3
      g26L7kil12gyunFODUPi6z//iVQyjlXUGA6Hv1asyXti9gBjYnE6zg/f/4jd5SHhEhC5dn+U
      QQ9FM14OSxAEAdFqQxJgpChIkuV67JDJR8EMgu84dz0INl2gz5Ret/tZro32qWEawJg43nnE
      j7u7HJ2cvRysp+s6hq6j3/y9GKhmGAaVSgXDMFAUBV3XOc0eM1RVNF1n2G3Q7l9/rirKyxlj
      qqKgaTqGoV/vZ3b2r2HGAGPCMERiyQRem4O9/X22Njd59NMjIi6R48aIjcU4Pz0pEPYITK8/
      oFS8YNSucNFUiMYSDHstDg8P6fcVlmNu2g6ZJ3//O8FICMMaxq7V6akS7d6QuFukY8jEE1PE
      Qt5xN/2TwuwBxsb13VxVtV9+LIhsPviGiNfJxMwCSzMJBsPrPD/+UARBGzIYDrE5vayureG0
      /vw8wB9OsL6xDsMOvZHA1uY6XqeVcDSKMhwwMNWj1zANYEyIkpV4Mkk46MMp6TzZ3aXa6iFJ
      MhZZgpvh0ALXiW9FQUQZjZBkC512B0G4/ulEUbjZFoSbVWcEQcQhazze2aXW6jFSFCyyTKfT
      +a0q3UlMFegLpV65YqiqFK8aPNha+9XtTBXI5JOi2+2+8fN+t4v2xm/ejNPlAiQ211Y+Sr2+
      VEwDGBO5vQN6N681VWU0ulZvstkso9HoRsnRX74uZo8ZYqAqo9fjhjdgc7iIx2PmesNvwVSB
      xoSuay91/IvzHPVaDU9qmVatzNGhjiZ7sY7qKIIFwebFAYxaVzw6OCMajbI0NzXO6n8xmLeH
      saNTq9YwNIVKo40vFGN9Yxu136RUKmMY0G43AbA4ffjsIt1uD3O6zMfBNIAxYegjDnZ3Obus
      0Ov1ESUJSRTpt6o8fvQTnmCCVCqJphvEolFEUURTFBAkBt2uaQAfCVMFuuOYKpCJyR3GDILH
      RPbJQ2qihUGjzTf/9GdEVUGQZGRJQFWvA2SLLKNrGpphXL++GSNksZg5Iz4WpgGMCUG0sra5
      wcXOQ1q9LrXzApVmmwerE/z05AyXdUhy5R6n6T2sokFqaZ0nP/6d+NQiWytz467+F4PpAo0J
      XR2w//QpQiCBfdCi0x9QbzQxEEhOzfJga56zXJ5ma4gkC9SqLULJGfPi/8iYPcCYkK0u1jfW
      cAG1QhZVB9kiAzr57BHVS5nV7fscjtoYspNYyE2h/PFzbd51TBXoE6PfuqRQlViYjdzK8e66
      CmT2AJ8YNneYKcebU550Ox2cbjdmQpSPhxkDjImTwz0eP9lhL51F1zR0A1RNRUAEQ2V4MzZI
      UUYMBkMMwyB3kkM3RpTLDQxdZzAYYBgGuqbS7w/MGV+/A7MHGBOj4RCHJ8Ts1CTl/D5CbIvT
      9BOWpiI8OarhoMP85n2ePHpEPOjG4n2RiVqndHlFuZgFix1dcqJ2SthdPpJTC3idpkT6Ppg9
      wJhY2rhPzGfn+x9++uVSwYLIxPQs91cmuKj2CMdSrG3ep98qvbKRQblcRlVVep0OiViUbqdD
      fzC67WZ89pgGMCYKuQynhStsdjt2l4vMwROKVzUwNI6PnvHT8zJzcRelQo7HP/1AODGPJF7n
      CpIkmVQqgaYbRKIRhkMFSRLoD8wpj++LqQJ9YnSqZ1wNPMyl/KD02M1esLUy/4cdz1SBTD4p
      RIuHhNcDgC7ITCaiY67Rl81LA+j1eoxGpg95W5wcHnB+WcUbjLKxvox0o23WLs6xRycYSqCN
      +lw1ugjG+0yGfD807Y8r+3PAdIHuOC9coD9imVRN0z75Ms0g2ATgD1mR8nMo04wBTD542dhf
      QxQ//v31Y5dp9gAmdxqzBzD5cLQR+wdphsMB/sQsg0oOBRv+SBw3XbLFGpLFwfZyiu8fPUOU
      JB589RW2t6RsyWXSNDt9DIuL6aCNw0IFyeLg3sokPzzcA0Hmq2/uc/D4R1TNYGr1PjHfby9e
      Xrk45bxUpztQ+PreqtkDmHwERAtLS0uE/G4URaXV6iBIMgG/j3yxwtdfPcBJj8O9I5a++pbF
      hJdi9c0JwF5lamaeZDyCqqocF6749quvcAgDcuk0M1vfsTrhIXd+hmBP8PU325xlc28tMxSf
      ZGtzDclQGPXqZg9g8mFk0k/xxmawGX36Ix1B0vnTf/nvaMqQ7x/uYpcFBK7jDFUzEKXrPKa/
      JT5enp/QM+xMhN00Wl0kQUATBLhOg4qugSQKiKKAPtJAtF7nSv0NubjTKJO7bLA4FePRk30W
      17fw+FymDHrXaTQa+P3+DypDGXRIHx4DGqIjgFXpMNA0FGzE3QLFeh9VF7i/kuCHnRySoHHv
      629xWn9LztQ5PNhnpAv0hjqTITvntR6aBvdXJ/lh5wgRg3tff8X+w++RJIno/CaTYc9v1vXJ
      X/+VkTOEy2YnFfWZBnDX+RgGYBgGhq5j8EKlMdB1A1EUEQBN169fCwK6rgHCO6k5uq5jGMbL
      bXVdRxBFREA39JflGLqOblxnyn6bmvWiTG7qarpAJh+MIAgIv3g4JfDq21cfXIniuz/E+kcj
      +UU5ws+vBVHkXUv9xzLNINjkTmMagMmdxjQAkzuNaQAmdxrTAEzuNKYBmNxpTAMwudOYBmBy
      pzENwOROYxqAyZ3m/wdWOk59YDwRZwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Profit map' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Regional Sales and Profit' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sales by Product/Region' width='192'>
      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
      OjpX8/8BEmuseKZ7/yYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sales in the South' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nO2d2XMk2XWfv6ysfS+gCijshbWB7kY3epkZzsJF1EghiZIYtuwIyUG/O8J+
      cPgvmDeH7ReHwg/WgxXhCIXDpCmRFEkNOeSQ4syQo57e0Nj3vbDVvq+Z6Qf0dE+Lg0ygG0tj
      6n4RHd1onLp5Km/+8t578p6TkqZpGgJBg2I6bwcEgvPkTARQKpUQA81LgqaJvvgMZyKAWq0m
      Tvpn0JQadz54n/c/uENN+e3zcu8XP2YnXz/080uT9/jbv/07JhbW+eendXJySvfY+b15fvLR
      gY2m1rn70S/4h/f+kWL12eO99957v/XZUi7Buz/8AZOLm8/8//rcFLmqqnvclxX5nXfeeee0
      D1KpVLBarUiSdNqHuhB88t53mM+68JbXuLtRRsrvMj89jsXXyi9/9F1+/osPufLm7zD5qx/x
      cDlOX4eH+3cfMbsSpS/Syc9+/D06L41x/73vIrUOE534FT/94D7trQH+63/5z8TTKj1dfr77
      7f+HxddOKOB+cuw7v/4NV155DbfNzN78FO/e3+BKJITd52JuegWPpcziTpG7v/oxC4ur+MIR
      /G47aDX+6i//kv6x13DbbaS25vi7H/6MYFsbf/M//hsP1mMM9vfy0+9/h0TdRnuTnb//7reZ
      Wdmio6eX37z399yfjzIQaeX+/Uc8eDRJPJ6is6OFu/fG6ehoP5e+EGuAc2BxIcaffPN3+d0/
      /WNiC4vc/+A9crYwOw9/Rj04wuhAJ/GVByyk7GjRh0xt7vC977/PlSvDBw3IFvoHh/mzb/4u
      s/NrmG12tMwqH07v0TcwzJ/+8df56Q++x9gbX+MnP/zek+NqapVYAVrcNgCCPT1Yc8v8+Jd3
      MJvrPHw4Sz6xyczKDpLZztfeusEP/v4nTN7/mJWlReqBCK/duMal/h4kkwWvvc4Pf/IxQwP9
      /P43/pS5j97FO3CLiX98lw9+/mPMHaNU48vMjX/MatFDi7LNrx7M8N3vfJ/L12+zOnGH5bkH
      rCXPb3YgBHAO9PT4+Mdf3efBBx/g6+nB4WvlrddugqZglk0Ui2XQVBZmxqnZfNjQuPbqm7QH
      fUgAqkI8tsf7v/yYwU4X73+yxOjlATQV3FYThUqNWinLP/3THdq6I0+Om4ou4e8cxPR4IM4V
      VH7nT/6ctwZd3JvfIZ9Jsra2gQqYzRZqlTKy2YIsy5icftTYKgurm2xtb/PTn3/A6NVrmCUF
      j8dBoVBCqVd5cOdjAi0dVKsKZrOJUrGEJEkoikJdUZEkuHT9Vfo7gnztzWv89//5Pb781tg5
      9MIBYgp0DnQNDLM5/Ql7FRf/8htfwyKbCLW20dbZxcy9j/CGI9z40lcIkCFZlrk5dhWXw0lL
      yA+AVCvy8Z179N74Kq+PDVNPbZHFw9BAP2NDbXzw8TTf+OYfsL6wQEvXAH1dYUDj7scfc+X2
      a7is8oEjao2PfvkzSvZ23n7zVeqZTTK4uTQ0RLOtwsP5Xf7km9+gN9KL3+vh8nAfv3r/fWRv
      mIFWB0u7RUYuDXLj5igff/ghb/zeH1PcW8PsC/OVt15l8pNfs7a5x9f/xbcgNkdabuH33hhD
      Nltpaw3i9rmZXtzhD7766rn1hXQWzwGy2SxutxuTSQw454WmqXzyyT1efe1VzuI2FN+Y5a//
      z/fpGH6Fv/jm209Gnc/y4+/8NZ23/pDr/W1n4NHnIwTQAJQLGVZWN/AE2+hs8bO8uIDFHaS7
      LchedA1nqAePDdaXlyhrFgb6ezF/3hX7BURckQ1AsVRlYPgyOyuLrC3PYWvqpBhbZzdVIJfa
      J1GoU9hbIS83EbTXWNtOnbfLZ4YQQAMQaA6yvjCJM9hGsVSh2ecm6PdQUSXCoQAAzqY29lem
      mF7eJtjkOWePzw4hgAZgZeYhtmCEq0MRPHYrmUKJdK6Az2V/YrO/vkJk9DY3r/SzEd07R2/P
      FiGABkAy20jtbjAzu0R7/zCZnRVM3jasWoWl7SyJ9QVc7f3U4uus7xcZipzfovSsebIILhaL
      VKvVUzlIsVjE4XBc2DBosVjE6XSetxuCI3Kc/jJ/+g+n03lqnWwymS58FMjv95+3C4JjcNT+
      urhXpEBwAggBCBoaIQBBQyMEIGhohAAEDY0QgKChEQIQNDRCAIKGRghA0NAIAQgaGiEAQUMj
      BCBoaIQABA2NEICgoRECEDQ0QgCChsZsbPL5rC3NkilUKCsyw60W7m+UCDd76e/ysxGt4zIl
      qLk66Gn1naS/AsGJ8twCiAyMUMwmmVzYJJ0p4bTLuFweJFTiOxvkfB5u9PpQVfXJn4uKpmkX
      2v9G4zj99dwCiEfXWNnPMTZ2FZtZplvTGL93F7+3B9BQPuPARc0FFnzxeW4BTE5P0xTuYm09
      itdaZz+Zo6TKWGWZYFsPPmuGpc19BrtbkCQJk8l0YXOCP/VfcDE4Tn+J0ohHIJ1Oi6T4C8Rx
      +utiXpECwQkhBCBoaIQABA2NEICgoRECEDQ0QgCChkYIQNDQCAEIGhohAEFDIwQgaGiEAAQN
      jRCAoKERAhA0NEIAgoZGCEDQ0AgBCBoaIQBBQyMEIGhohAAEDc1zC0BTFXK5HLW6gqZpFAt5
      qnUFTVOpP/67WqufpK8CwYnz3FUhNtaWqWsy+/EMPSEH+2WJYjbPzWs9rG/VsSp72FoGaW9+
      7kMIBKfOc1+dPX1DpPa2SObsbKfy3Lr1CnMTDynWFdbmJwkPDHCtyYWiKCiKQr1ev7BVIT71
      X3AxOE5/PbcAosuzxKpWbl8fYfzBfRRNQ9E0ZMlEZ6SXfD6DhobJZEKWZcxm84UtkCXLMrIs
      n7cbgiNynP56bgGsR3dw+4MsrGwyEGnn/v0H2OxuHFYrLm+AzlYbq1tx+rtCTz5zUQUAF9v3
      RuSo/SUKYx0BURjrYiEKYwkER0QIQNDQCAEIGhohAEFDIwQgaGiEAAQNjRCAoKERAhA0NEIA
      goZGCEDQ0AgBCBoaIQBBQyMEIGhohAAEDY0QgKChEQIQNDTGAtA0FEU5A1cEgrNHNyXyB3/z
      v2juaudH//Ahf/Stf8dXRrvPyi+B4EzQHQGq1RLv/vRDvv7VW8TTubPySSA4M3RHgG/++bcI
      ffKIcChIc1ffM7+rFLPML0e5OjpCPRdjfCGK2+NhMBImnVXx2Wskyhbagp5T/QICwYugK4Cf
      fO/b5FUz0Z0trHGVf/3V0Se/K5ZraLUqKhCLRukcvEzYbaZeSZJMlFnPbHPt1u3T9l8geCF0
      BWCzWklkiszPb/JHV7/8zO8CTc3sRHcA8LV2srG1yHIqz62xXpamHtB9/SZW2SQKYwnOnBcv
      jKVpxPZ2GHn1d/BsrHFp1MOVvpZDG6kqKgNDw5Qe3KWuwsDobSrpTdLFFvxO65PCWBdVAJ/6
      L7gYHKe/DrVaWZwhli5Rq9XQSNLc1oXPZX/y++jaEpV6jfn5Zfq7Wlmam6WjbxiXw044rOHp
      byaeKoLT+uLfSCA4JXQLY73/d/+bH92Zx2cq8+a/+vf83q3+5zqIKIwlOEuO01+640R0P8Pb
      X/sKcnmPZLZwIs4JBC8ThwpA0zT+7N/8WzSTibt37vOHXxo5S78EgjPh0DnJ5Ec/YSFW5f3v
      /1/u3L3LZix7ln4JBGfCoQJYW19HLe1zf6PKX/z+DR7Orp2hWwLB2XCoAL7y9u/z8S9+yV98
      68/JlE3cvtJ7ln4JBGfCS10e/ddzu2SLVV2bt0bCeBynG2oVUaCLxYlFgc6bdx9ssLaf17W5
      2t106gIQfHG5mIF5geCEEAIQNDRCAIKGRghA0NAIAQgaGiEAQUMjBCBoaIQABA2NEICgoREC
      EDQ0QgCChua5BaBpGol4AhXQNJXN1SXS+RKqUqVQrKApVdLZ4gm6KhCcPM8tgP3tdSanF1CB
      1ZlH4A4yP/WISjnD1laSmYlxMFtO0FWB4OR57t2grR0REsmDnZrJcp3bIT+FHTvFusLy9H26
      rl7H77S8UF2go2zUfpGaPYlCFcXgIM1Oq6gLdMF48bpAx8QqQUXRqCoKVtlE7/Ao2cQOtf5O
      LLL83HWBJMnY5kVq9nx7fJN0Sf9E/cevRURdoAvGcfrruadA0bUlkukUc/PLXLo0yNT4A2ze
      FhxWB/6Aj7GrfWxtx5+3eYHgTHju21pHZICOyMCTn2/duvXk323hg7973c/vmEBwFogwqKCh
      EQIQNDRCAIKGRghA0NCI2N5LRK5UNXz24XFYkI4SHxYcCSGAl4j/8FcfUK2rujZ/85/eRhYC
      ODHEFEjQ0AgBCBoaIQBBQyMEIGhohAAEDY0QgKChEWFQwbmQq9RJlWq6Nh6bmYDjdJOqhAAE
      58JGusxv1tO6Nldb3bzec7rvZRBTIEFDIwQgaGiEAAQNjRCAoKERi2DBF5LprQwTm/qL7NFO
      38kIoF5MM7Gwjt3pZqi3g3xBxeNQSRYg1CQSgwVnz1ayyG8W9Ysy+J2WkxFAPLpO+8BVwm6Z
      ainO3n6VtcwWQ9dvGX9YIDhHTkQANm+Q9eUpVioKN652sjh5l8jYbZxW+aUujHUU6nUF7SUq
      jFWvK2gm/ZyBi4CqGn8HVVOf67wrinK09lX1hApjubyMjrYx9fA+VUVjcPQ2ufgmxa4wTuvL
      WxjrKJjNMmr95SmMZTbLyMc8jy8jR7kWTJLpuc67LMtHa99kOhkBKLUSM9OreEKduOwegs0q
      /T1e9pJpnOHmkziEQHAqnIgAvIEWRgMtT35ufnzNd4RPonWB4KAa+VE4br70yzGuCwQG7CVi
      bO7u6Nq0BVvoDLcdq92LP5kUCF4AIQBBQyMEIGhohAAEDc0XahF8bytLoabo2rza6cVhkc/I
      o8ZhNV7gvkGCS1/Ixc3u001wOS5fKAGspUqky/pPDsfaPJxyll1DkshXebChLwCzLL10AhBT
      IEFDIwQgaGiEAAQNzRdqDXDaPNzOUlP0H8nfaPdgkcV95aIgBHAMpvfyFGv622xHw25EkOni
      IG5VgoZGCEDQ0AgBCBqaE1kDFNP7TC9tYnP5GOkLsRtT8FoLZPHR1eI9iUMIBKfCiYwAC8vr
      jN28iVTJUKpWyGczLGwk6Ah5TqJ5geDUOJmyKIDZJGE2mahrKmsLs7RdGkHi2eycRytrZIsl
      3bbG+iN4HI6TcEsgMOREBNDmczK3skG2rNBrlum7fANzbZdoPEtn6OkUSFFVFINs/SNmvl0I
      ZtfXURT9zXkjkchLmeReVxSqdX3fzSYTVsvFjqSfiPft/ZdxJOL0dFzHZpGIRMBmaaVYqp5E
      8xeWbKFA3UAAL6L4bCFvaON1PV9hsng2z+xmVNcmHPAx0tXxXO2/LDwRgKqqR048/jx8gaaD
      djQwy6CoGjab5UmNFlVVDzrb4Biaqj65a8qShMXg5qhpT+0lNEwYjDDPtA8y+v586ruiKJiO
      0P6B7RPnDL/vZ+vXWGQJzaCcjaqoT9qcXVkGPf8lidsjVx+7ojG3OKnbttfjp6Ot+7G9aixO
      TXs6wmkqsqRvb/pn9kbnks/0raoe4Vw+tldVFQkNs4E/oCFpj6/6UqlErab/xo7npVgs4nA4
      jpyxr6rqsWoInbZ9oVDA5XK9NP4Ie32O019PRgCHw4HjFBefbrf7yF/iZTuhqqri9R49nPsy
      +t9o9kftr3NbfanVAtv7KVYXppmcXXpmdPu8L6tUcuzEMizPTzE1t2xsX86wE8+yNDvJ9MKq
      sX0pxU4ix8LMBDOLa4ajf72YZDdZYH76EXPL68/87vPaT21vkHs8wG5ubBral7Jx4tkiMxMP
      WVzbMrQvpGOkckWmxx+wtL5taJ9L7bO3F+OTT+6SzFcN7DW2o1sU0/vc+eQe6aKx/ezsLOoh
      J/Hz/Iltr/Pxhx+xtbNDtlQ3sNeIRqNkY1Hu3HtIoWpUPlFjKxolvb/JnXvjlD6TNXhuS/hS
      NkWuCPm8gttSoqqBTWeGVErHyVVs5ErglIvUAb3ErkJin5zqplC3YK3lUQG9PWq52C45yU9R
      c2Iu5Qz9z+5tkzM3U5G9SIWsrm21lGNy4hFySxqPrKGaHXQZtJ/Z36Fo8aK5WilnE0Cnrn16
      f4eq1YXk76SU2QPade1T+7uk7B0Mj/QSje7TdEm//Vgszv6uwuXhbnZ2Evj7DervlFP8+s4D
      ws0+wp3deBxWHWOVrb0UkRYfFVUhkczg7dCrKKgS24+zW68x2BkikS7gavHp2sf34+wpNfpa
      m0jmynQ0HUyR5Hfeeecd/W/y4lQqFaxW6zNrAIvdSS6xR2ffIBaLBa/bhd4KweJwk47t0tM/
      iMVixmNgb3V7Se/vEunrx2Ix4zawt7n9pPZ36e3rxWIx4/qMfblcxm63P2Nv9/pJ7O3R29eD
      xWLB5XIe2rZsseFz2WnpHqSns41wi3G5SLvLQzyepi/SidmgfQCnx0MikaOvpw2z2Wpo73C5
      qOXTeB02XE1BbLrRBgm7WUNy+HBbzbgDzVjN+pMHr7+ZerlIUzCI0+nCbNI7+xJqOcvyepRC
      3cRAb7fBlnITZqmGw9+K3WrB5/Njlp+2/9v9ZULWqjgDYew2C36fF/mxP+c3BapXiCcz3L93
      n1Q8hmow5ajkE6QrZtx2Cy0tId2LGaBWSBPPFFhemGF+fo6J6XndeI9SLZBIpnnwcIJ4PK4b
      XAGoV/IkU2kePJwkHosZeAM2h43ZqRkq1Sq1I1Q8zsa2UGw+rBYzLaGgoX2lkCOVjvPw0eyR
      /EnsrKNYvTi8zXgdehMBlcWZKTa2Y2QSeyytb1OrGYe352amUQsZstUK23spA2sNVQNfqBWn
      rLKyvExV0YsQaSTiCRbG77CbzpA3DLdrJBJx5h9+wl4qQ6Hy9PyfmwCqhSw2XyvNXgeVchmD
      PBNkm5tyYoPxR5PMLa0aCyaXoaV7kGvXrhHw+fBqZTI6110pHcfb3ovXbqZcrhj6X0zG8Hf2
      47HJR7KXzA68do2VlRWiu/ovbgCwe5rZX51iYnKSlY1tQ/tsKkE4MojDpFGuGF+g7kCQ6MIj
      JienSGaLOpYmBi9fZbCvB0lRaOtow2rVm84cIJtMFIpFdnf2sP2z0fO30cgUqly7do1IuAmX
      08Lc/Iaufb5cp7ezDaVWp2wYvVQplFUinWGUapVK7SUQgMMfJuRUqdYUWnv6sep4olTL5AoV
      WtracdgsWGTjpYs7HKG0t8yj8UfYvM3YA0E8OosAT7gPTz1Nta7Q0z9gWJrd2zGIo5KgpihE
      BoYM/bG5PAS8LrLpNKUjCMbu9hIONeNw+XBajTNsWnuGUNL71FSFgUuXDO2dbh8+l4dgqBmT
      2eiC1phfWKLJaaZYrxON7hvYS/T29VDCjMvhpa3ZKCQpYZMVJqdnWN7cw+12YnfoicbEpYEI
      qXINs9VFu+FbiGSGBnpIlapYnD5afE+jnec3AuQTFDQXslZhZWlZdwQwWWz4/H66urvp7Owk
      3Bo0nAIplQKlqopkMqHUarS2dyAf8qFMYpeJySlS+TJWq5l4PGkYBcpvL0Egwq1bN9neWNG1
      LSSivPveL9DsHhxODyMDPQbeQ2xtHndnP9V8gdi+0QUH1UKaRLaIxSyRTBsv4qMrizhcfmom
      iZ1N4xHG67KyuLrB8uIqgWDAwFplfnGdV15/nbCzzvqufrkUkOjq6cVmkfEFmnG6mhiMtB5i
      q5FMJIjH4sgWG+VcmoJuKZwD+1gshtlqo5RNUay+BFEgTVXJJKKYXS346kXdKI0kSSjFFBNz
      K+SzRcw2O19+80u6IqjkUgQ6B+gPG8eDfc1hrjW3EtvdplBRaA23G44AVreHneUlTDknFVX/
      PuJqaueV6xr7+zvE4km295O0tzTpfsYf7mB8aopMOktk6Irhd0jF9ugdGSPoNDExMQnt+uuG
      YDjM3U/G0VJuRg1fZSXR2dOHbPNgdXoIeo2mNBIoFdZW16gVM2TKBdy2QYKBw3YHq0zPzFFX
      NVoDLrKlGi7758f4NA18fj8+/9P6QvrPCCSamgPkC0VGh7p+65o5NwHYfCGGBx3YnW7qtSoW
      gwuuVi7Q1BbBIm9jljQU9IcviztAfHKOYsyB1ellsK8HvUBEYX+NrYxMb4uLyckpXrk1pisC
      q7cFn3mb9a0M4c6IvvOSRCjcSSjcyWVVIZfX3xGbiu2wG0/j9frwen3YrMbd5PIFmJ99xI7N
      QrFUZG5xlaGB3kO/s83ppaOnm5qiYdIM9iuhMTs9Q2ffELnYBhuqmZ6wXtgRRm+88njj40HA
      12zWC1pLeP0BTPUS8UyB9ubD/dG0OssLCzxNzZbo6R/EfYhgPrXZ31ggW6rR7HXSFAphMx/c
      bs9NAPVSlumZWTLpAha7ky9/+fVDpygAzmAXvapG1lqnIjkw69iqSg3VZOPyyDAaYJLNuqNF
      IZtiez9OsewgbVNRVaMLAtLrc1jCl3h12IokHX0mKZlkvF79Oau3KUQhuYfUOkzIKTE3twAd
      h00JDrA7nUhoKPUa4a4+Ih0tuvbRlXncrQM0Oc3Iuq8hUtne3CSTL+BJp1BUDekIi+yVhWnW
      t2O4bGZ6r32J9oDeOkbD4/HQ2jpAva7ovhbJZLIwNHKZ5bkp8hUNRdWwmI3XSINXblCu1jDJ
      ZkyfubOdmwCqhRxN7b1YzLvYZFA0dAVQK2YYn1nGbrNisbtpDQYOvUNrqka9ViWZTKIBZqsD
      l/PwuLjN7iTcM4y/mKdSU4hEIob+O/x+NqdmUVt82JxeejpP7nU4smwmEGplZnUJJeBEkYxr
      Ocaim0Quj9HsMDE5MQkGAnA47SwtLZL1Omlp78LvPmxaI+EPNDM25iWbK4CliUBQ/+4PGhVF
      pq01RGd7iGSuAAG95xISe5tL5CoqIZ8Tl9tjcFFrFGsS166PktlZZzeRo6dVzyeJ/Z1NSoqJ
      SqXGVZ//SeWOcxOAwx/El63iafURyymGuz7VWplAOMJgl3FMXLZYMRdSRPfiuB1WrI6DsP5h
      +jJbbcjZPZY2YmiKBpKJ1pD+wyqrN8zrtw9sTKaTr4Pi8AVxm3eJ7sQIdxkvmls6I0zOjLMp
      SQTbI4b2/lAHprWHWEM+6pr+HNrpdjH58D6pTJ6A14Fq8+Oy60SONIm+/j4sksLyxi79g/pP
      pQE6uvvZjydJaXVsDjdGaQayWmVqcpJatYxmSuOw9tFy6BpDoVgzce36KPH1RVL5Mo7AQWTq
      3ARQTMdIl50MdvaQmpigqoLtkH7Ip2OsbsapVqtMpnewONwM9R8+v1WVOtVqCV+og4GOJiTJ
      ZBg1UmtVQh09ZPe20Y4wBarlYtydWKKugmx18JXXT/adyPurc7g7LtHvNhsKrFIuUqlpDAwO
      Agc3ACN21pcJNLdhctiJbe8SvNStay+ZbYSDZuweN5ViETh8Grcw/ZBC3UQdK7evXz7S2z73
      drYwuwIk9rbxNrfgsOldmibC4RY295K4A60M9HY9M635bWTCTS7Gx8eRLQ6udD0djc5NAM5A
      C/nxCcZjG5idPt3nAA6nC29TiJ6OMKCxtrqm23Ypn2E3XUWqF1lfz2Gxu4joJG6o9Rq2UC99
      JhN5u4ZqdRt2WjGVoH3gEqVMDqVsHHY8Lk6vh0cLc5Sa3Dg8frraDp/SVIoFktnCk58dbh8u
      3Tg6BNvauXfn0yjQTQNvJC5fuYKkKUS3dwk36UfWqpqFG2OjTE3q5x88RaOmygz29pIwKxRL
      VZo9ev6rrG3FuHFzjP31BbYTeTqDevnnGsW6RGfQw2I0Ramm4H4ssHMTQK1apat/mGaf6+A5
      gAqHbS9RqmXyhacPj/KZDCqHR4FcvmYGHDbieY1iYotKXTl8/gMUkrskNQ89rX68TaEj+e/v
      GsKhQLySQWoy2tp2fNzNXbzqO9hwJhmMAN6mEBazxNT8MiarF0+1TqtBrL5UrPLa19/GrBWJ
      J4vg1h81DkKNJlqCblajMS4NHP6dPQ4LExMTByP25ATdfUM6awwAE5cGe1mYncbhbab3CMUU
      lEqe6ZkZStkUNbmATR4iFDhsVFJJJVPEFIXBtiayxcr5C8Bid5FZn2J2IsvQ1THdBbDFFcCu
      Rrn/4CGaUsXf2qNrD5Db3yYnN5EpatilDKruIltl5tF9tj0HQ6PD28z1y0OHjgKVQpZ8qUJ0
      ++CthXbVBgZx/eNQzqbI1+psRw/ad/mC9PcY7+7sGBwhsb5Jsai3tQHKuSQPH9zH2x5HrhUJ
      dY3o2u9urbKfPBjlVKVGUziia98zMKz7+2fR0DSF5bUdLl+5Si6+xcZOiki73vmUuHr9BnVV
      A7qxO5yYdTfPyfT1tKFYPKiVAi2+c54CFTMJlje2AQ2TyUQqvk8w4NZ9ENY/PHqsY3jDPUTn
      FugfHKKQSeo+A5CtTm6+8hqth95BnkVRVYqlMoHAwV3WYj96tthRsDkdTD+cwNccIh3bxeEz
      HpWa2jqZW1iiUqnR/zgN8jDsniZeff0N7L5m3annp4Q7ewnr75Z+IXY219jc2kBDQcPE0LBx
      nnEitke+XCOxE6Xvxhu0+fWSuVS2dpI45H3iuTL9Dh/Bx1Osc9kK4fQ1M3plBFlTcbmdmMwW
      wzv6caiVCyTTGVRNY31pnmyhoru1wekPHfniBzBbrLjd7id/HHbbCXj9lMz2GqGBa+Rj21wa
      e41S2ngrhCTJWMxmHE4nJYMRAKBayhLd2ObXH/+GaOzk1zBHR8Ljbebrb79NZ0sTstV+pLi+
      w+nC4/EQCHipHyGVt1bOEitCZ9D3zEbfc9sLVEzuYmnq4vr166j5JFWD/OjjYLG7aAoEnu4p
      P+FSK1a7E6/dxMLiEpub6+wnMifavqLC+tIs8VSG+dmDPUpGyBYrDpsVRalTrhhvtqsWiyTr
      Ktcv95PLGleXOD00VtY3sJo15ld3CHsktvb09w7VqlUsNjsmFGyBdjp0F8AAJoZHLuOxW7A3
      tRJwPb1hnd9zgECIwqNJHsU2MTt8hs8Bjkt+bx25uZtrradTmjEXj9I2NEa3352z9oYAAAQx
      SURBVMLEowmMMrCOQ3NkmC9HAG4c+TPVchF/uIter37iz6e09V1C2dykUIQOg6fMp43TIvHo
      3j1aey+jVvaRnfoPwWZmZhi9fp2pyUn8XjexTIBWv96DNpXpmXn8DguZdIoKVtrP+zmAJNto
      CzWzl84TDrccqdOOg83rZ/PeBOWY/2AvUG/3keLRR8Xhb2Vh9hEZh41SucTM3CJDQ4OHRrJO
      m1I2xdJuBodFxu0P0detn7K4v7FEtGjCk47jlLx4wuf15kCJgeErlCs17HY79ZoD2aLvi0lT
      WZt7RKB7hJCUoWRQwOsgow3WNjYxB2rcbHsawTo3AZQze8TKMlcujzD1aALfjZuGG+KOg6aZ
      GL15yyCe/PxYXT68LitVVaN/+CpB38kuhI+LptZpaY/QFnBgko3n0Iqq4fWEcComyoUCcH5F
      jCWTjMNx4LPFMNlGYuTKFRLpPL2hZgpZM36P8fqtPdLPyPVbFPO5Z9I5z20NYLbaKWUSbG1u
      UsN84o6YzCbG731CPJkikzv5OW5mcw5r6xCjV6+wsbxw4u0fF6cvSCWzz+bmJjGDNUmtXKIl
      Msxg0ILN5mawzyDB/SXDbLXT2hJEkiTcPr9BvjGAysbGFiaTTDkdI559uqY6v6KUsp0rl4cw
      STA0fOlEo0AAkmxneLCXSql0pBTB42Lz+tmYnWB6epZUMsns/MG2iPMgtbFMxR7A67QT6R+g
      UtAXQHx9iXRNIrW5Sltb+MTP/cuHTNDnYPzROFuZ2vk/B1BqJf7pzl3MsopsD7Gx9ZDX3viS
      7hbn46LWKuzvx9DQKNVMtASbT3SdYfd38JU32ynmMzjdPnp7TjFQbkCtXAQVCrkszRqGD8JM
      JliYnkBNbLFb1ujoGaDZp19F4mKjkspVGRsbI7axRCJXIvx40XxuAmhp78OnpNA6h8mvzlBT
      D2qKnhRWl4+btw42qE1NTJxoJFSplllaXqZYqRCPZ3nzrTePXPbxNHA2NTM/N4lSKVKYmjR8
      MNc6OMpB3OfaWbj3EiChVgusrq2RiqUYCD3dXXsuApAtTiq5dbZVFRankGXbiS6A4aAY1eLy
      GqoGFqfvROd69VqJdLaA0+XA6w/g1M1GOn3cwXZuBU8uDPvFQ+LazdtkMllssvSkJhDwtDju
      aZLNZo9VG/RFKeeSpKtmbJU05pZuPC8o83Q6jf8zOahwUG1ZU+usrSxRwcHIYOTFDiI4MZ7t
      L41MYp+1zW0SO1HCl28z3N36ZPv0xX67wSEotTLFkhW1kMHWzKl8S0mSkGQLfYP6G8kE543G
      2soyOAI0BZroaA8/sy/s5Xs1yQlgdXrJx7fYK1TZnJtgbnHNsJCW4IuKieuvvMGVS30Ew62s
      TD0iV366d+gLOQU6aT5vCiR4edHtL007SI/9Ik+BBIJDkZ59dePFvCULBCfE/weyPfgr7aDi
      vgAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
